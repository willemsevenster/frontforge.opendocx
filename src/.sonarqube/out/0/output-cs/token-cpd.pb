ßQ
WC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Builders\CellBuilder.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Builders# +
{ 
public 

class 
CellBuilder 
{		 
private

 
readonly

 

CellConfig

 #
_config

$ +
=

, -
new

. 1

CellConfig

2 <
(

< =
)

= >
;

> ?
internal 
CellBuilder 
( 
) 
{  
}! "
internal 
static 
CellBuilder #
	EmptyCell$ -
(- .
). /
{ 	
return 
new 
CellBuilder "
(" #
)# $
.$ %
Add% (
(( )
new) ,
ParagraphBuilder- =
(= >
)> ?
.? @
SpacingBefore@ M
(M N
$numN O
)O P
.P Q
SpacingAfterQ ]
(] ^
$num^ _
)_ `
)` a
;a b
} 	
public 
static 
implicit 
operator '
Cell( ,
(, -
CellBuilder- 8
builder9 @
)@ A
{ 	
return 
new 
Cell 
( 
builder #
.# $
_config$ +
)+ ,
;, -
} 	
public 
CellBuilder 
Add 
( 
params %
ContentElement& 4
[4 5
]5 6
contents7 ?
)? @
{ 	
return 
this 
. 
Chain 
( 
p 
=>  "
p# $
.$ %
_config% ,
., -
Contents- 5
.5 6
AddRange6 >
(> ?
contents? G
.G H
WhereH M
(M N
xN O
=>P R
xS T
!=U W
nullX \
)\ ]
)] ^
)^ _
;_ `
} 	
public 
CellBuilder 
Width  
(  !
double! '
value( -
,- .
UnitType/ 7
type8 <
== >
UnitType? G
.G H
pctH K
)K L
{ 	
return 
this 
. 
Chain 
( 
p 
=>  "
p# $
.$ %
_config% ,
., -
Width- 2
=3 4
new5 8
Unit9 =
(= >
value> C
,C D
typeE I
)I J
)J K
;K L
}   	
public"" 
CellBuilder"" 
BgColor"" "
(""" #
string""# )
color""* /
,""/ 0 
ShadingPatternValues""1 E
pattern""F M
=""N O 
ShadingPatternValues""P d
.""d e
	Percent50""e n
)""n o
{## 	
return$$ 
this$$ 
.$$ 
Chain$$ 
($$ 
p$$ 
=>$$  "
{%% 
p&& 
.&& 
_config&& 
.&& 
BackgroundColor&& )
.&&) *
Color&&* /
=&&0 1
color&&2 7
;&&7 8
p'' 
.'' 
_config'' 
.'' 
BackgroundColor'' )
.'') *
Fill''* .
=''/ 0
color''1 6
;''6 7
p(( 
.(( 
_config(( 
.(( 
BackgroundColor(( )
.(() *
Val((* -
=((. /
pattern((0 7
;((7 8
})) 
))) 
;)) 
}** 	
public,, 
CellBuilder,, 
	TopBorder,, $
(,,$ %
uint,,% )
size,,* .
=,,/ 0
$num,,1 3
,,,3 4
BorderValues,,5 A
	lineStyle,,B K
=,,L M
BorderValues,,N Z
.,,Z [
Single,,[ a
,,,a b
string,,c i
color,,j o
=,,p q
null,,r v
),,v w
{-- 	
return.. 
this.. 
... 
Chain.. 
(.. 
p.. 
=>..  "
p..# $
...$ %
_config..% ,
..., -
Borders..- 4
...4 5
	TopBorder..5 >
=..? @
new..A D
	TopBorder..E N
{// 
Val00 
=00 
	lineStyle00 
,00  
Size11 
=11 
size11 
,11 
Color22 
=22 
color22 
}33 
)33 
;33 
}44 	
public66 
CellBuilder66 

LeftBorder66 %
(66% &
uint66& *
size66+ /
=660 1
$num662 4
,664 5
BorderValues666 B
	lineStyle66C L
=66M N
BorderValues66O [
.66[ \
Single66\ b
,66b c
string66d j
color66k p
=66q r
null66s w
)66w x
{77 	
return88 
this88 
.88 
Chain88 
(88 
p88 
=>88  "
p88# $
.88$ %
_config88% ,
.88, -
Borders88- 4
.884 5

LeftBorder885 ?
=88@ A
new88B E

LeftBorder88F P
{99 
Val:: 
=:: 
	lineStyle:: 
,::  
Size;; 
=;; 
size;; 
,;; 
Color<< 
=<< 
color<< 
}== 
)== 
;== 
}>> 	
public@@ 
CellBuilder@@ 
RightBorder@@ &
(@@& '
uint@@' +
size@@, 0
=@@1 2
$num@@3 5
,@@5 6
BorderValues@@7 C
	lineStyle@@D M
=@@N O
BorderValues@@P \
.@@\ ]
Single@@] c
,@@c d
string@@e k
color@@l q
=@@r s
null@@t x
)@@x y
{AA 	
returnBB 
thisBB 
.BB 
ChainBB 
(BB 
pBB 
=>BB  "
pBB# $
.BB$ %
_configBB% ,
.BB, -
BordersBB- 4
.BB4 5
RightBorderBB5 @
=BBA B
newBBC F
RightBorderBBG R
{CC 
ValDD 
=DD 
	lineStyleDD 
,DD  
SizeEE 
=EE 
sizeEE 
,EE 
ColorFF 
=FF 
colorFF 
}GG 
)GG 
;GG 
}HH 	
publicJJ 
CellBuilderJJ 
BottomBorderJJ '
(JJ' (
uintJJ( ,
sizeJJ- 1
=JJ2 3
$numJJ4 6
,JJ6 7
BorderValuesJJ8 D
	lineStyleJJE N
=JJO P
BorderValuesJJQ ]
.JJ] ^
SingleJJ^ d
,JJd e
stringJJf l
colorJJm r
=JJs t
nullJJu y
)JJy z
{KK 	
returnLL 
thisLL 
.LL 
ChainLL 
(LL 
pLL 
=>LL  "
pLL# $
.LL$ %
_configLL% ,
.LL, -
BordersLL- 4
.LL4 5
BottomBorderLL5 A
=LLB C
newLLD G
BottomBorderLLH T
{MM 
ValNN 
=NN 
	lineStyleNN 
,NN  
SizeOO 
=OO 
sizeOO 
,OO 
ColorPP 
=PP 
colorPP 
}QQ 
)QQ 
;QQ 
}RR 	
publicTT 
CellBuilderTT 

AllBordersTT %
(TT% &
uintTT& *
sizeTT+ /
=TT0 1
$numTT2 4
,TT4 5
BorderValuesTT6 B
	lineStyleTTC L
=TTM N
BorderValuesTTO [
.TT[ \
SingleTT\ b
,TTb c
stringTTd j
colorTTk p
=TTq r
nullTTs w
)TTw x
{UU 	
returnVV 
thisVV 
.VV 
ChainVV 
(VV 
pVV 
=>VV  "
pVV# $
.VV$ %
	TopBorderVV% .
(VV. /
sizeVV/ 3
,VV3 4
	lineStyleVV5 >
,VV> ?
colorVV@ E
)VVE F
.WW 

LeftBorderWW 
(WW 
sizeWW  
,WW  !
	lineStyleWW" +
,WW+ ,
colorWW- 2
)WW2 3
.XX 
RightBorderXX 
(XX 
sizeXX !
,XX! "
	lineStyleXX# ,
,XX, -
colorXX. 3
)XX3 4
.YY 
BottomBorderYY 
(YY 
sizeYY "
,YY" #
	lineStyleYY$ -
,YY- .
colorYY/ 4
)YY4 5
)YY5 6
;YY6 7
}ZZ 	
public\\ 
CellBuilder\\ 
	VAlignTop\\ $
(\\$ %
)\\% &
{]] 	
return^^ 
this^^ 
.^^ 
Chain^^ 
(^^ 
p^^ 
=>^^  "
p^^# $
.^^$ %
_config^^% ,
.^^, -
VerticalAlignment^^- >
=^^? @(
TableVerticalAlignmentValues^^A ]
.^^] ^
Top^^^ a
)^^a b
;^^b c
}__ 	
publicaa 
CellBuilderaa 
VAlignMiddleaa '
(aa' (
)aa( )
{bb 	
returncc 
thiscc 
.cc 
Chaincc 
(cc 
pcc 
=>cc  "
pcc# $
.cc$ %
_configcc% ,
.cc, -
VerticalAlignmentcc- >
=cc? @(
TableVerticalAlignmentValuesccA ]
.cc] ^
Centercc^ d
)ccd e
;cce f
}dd 	
publicff 
CellBuilderff 
Spanff 
(ff  
intff  #
colspanff$ +
)ff+ ,
{gg 	
returnhh 
thishh 
.hh 
Chainhh 
(hh 
phh 
=>hh  "
phh# $
.hh$ %
_confighh% ,
.hh, -
ColSpanhh- 4
=hh5 6
colspanhh7 >
)hh> ?
;hh? @
}ii 	
}jj 
}kk Î
[C:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Builders\CheckboxBuilder.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Builders# +
{ 
public 

class 
CheckboxBuilder  
{ 
private 
readonly !
CheckboxControlConfig .
_config/ 6
=7 8
new9 <!
CheckboxControlConfig= R
(R S
)S T
;T U
internal

 
CheckboxBuilder

  
(

  !
)

! "
{

# $
}

% &
public 
static 
implicit 
operator '
CheckboxControl( 7
(7 8
CheckboxBuilder8 G
builderH O
)O P
{ 	
return 
new 
CheckboxControl &
(& '
builder' .
.. /
_config/ 6
)6 7
;7 8
} 	
public 
CheckboxBuilder 
Check $
($ %
bool% )
?) *
value+ 0
=1 2
true3 7
)7 8
{ 	
return 
this 
. 
Chain 
( 
p 
=>  "
p# $
.$ %
_config% ,
., -
Checked- 4
=5 6
value7 <
)< =
;= >
} 	
public 
CheckboxBuilder 
Label $
($ %
string% +
value, 1
)1 2
{ 	
return 
this 
. 
Chain 
( 
p 
=>  "
p# $
.$ %
_config% ,
., -
Label- 2
=3 4
value5 :
): ;
;; <
} 	
} 
} Ì	
_C:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Builders\ImageContentBuilder.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Builders# +
{, -
public 

class 
ImageContentBuilder $
{ 
private 
readonly 
ImageContentConfig +
_config, 3
=4 5
new6 9
ImageContentConfig: L
(L M
)M N
;N O
internal		 
ImageContentBuilder		 $
(		$ %
string		% +
name		, 0
)		0 1
{

 	
_config 
. 
Name 
= 
name 
;  
} 	
public 
static 
implicit 
operator '
ImageContent( 4
(4 5
ImageContentBuilder5 H
builderI P
)P Q
{ 	
return 
new 
ImageContent #
(# $
builder$ +
.+ ,
_config, 3
)3 4
;4 5
} 	
} 
} ¥g
\C:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Builders\ParagraphBuilder.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Builders# +
{ 
public 

class 
ParagraphBuilder !
{		 
private

 
readonly

 
ParagraphConfig

 (
_config

) 0
=

1 2
new

3 6
ParagraphConfig

7 F
(

F G
)

G H
;

H I
internal 
ParagraphBuilder !
(! "
)" #
{$ %
}& '
public 
static 
implicit 
operator '
	Paragraph( 1
(1 2
ParagraphBuilder2 B
builderC J
)J K
{ 	
return 
new 
	Paragraph  
(  !
builder! (
.( )
_config) 0
)0 1
;1 2
} 	
public 
ParagraphBuilder 
Add  #
(# $
string$ *
text+ /
)/ 0
{ 	
return 
this 
. 
Chain 
( 
p 
=>  "
p# $
.$ %
_config% ,
., -
Contents- 5
.5 6
Add6 9
(9 :
new: =
TextContent> I
(I J
textJ N
)N O
)O P
)P Q
;Q R
} 	
public 
ParagraphBuilder 
Add  #
(# $
params$ *
ContentElement+ 9
[9 :
]: ;
contents< D
)D E
{ 	
return 
this 
. 
Chain 
( 
p 
=>  "
{ 
foreach 
( 
var 
element $
in% '
contents( 0
)0 1
{ 
p 
. 
_config 
. 
Contents &
.& '
Add' *
(* +
element+ 2
)2 3
;3 4
} 
}   
)   
;   
}!! 	
public## 
ParagraphBuilder## 
Add##  #
(### $
TextContent##$ /
content##0 7
)##7 8
{$$ 	
return%% 
this%% 
.%% 
Chain%% 
(%% 
p%% 
=>%%  "
p%%# $
.%%$ %
_config%%% ,
.%%, -
Contents%%- 5
.%%5 6
Add%%6 9
(%%9 :
content%%: A
)%%A B
)%%B C
;%%C D
}&& 	
public(( 
ParagraphBuilder(( 
Add((  #
(((# $
ImageContent(($ 0
content((1 8
)((8 9
{)) 	
return** 
this** 
.** 
Chain** 
(** 
p** 
=>**  "
p**# $
.**$ %
_config**% ,
.**, -
Contents**- 5
.**5 6
Add**6 9
(**9 :
content**: A
)**A B
)**B C
;**C D
}++ 	
public-- 
ParagraphBuilder-- 
AddCheckbox--  +
(--+ ,
string--, 2
label--3 8
,--8 9
bool--: >
	isChecked--? H
=--I J
false--K P
)--P Q
{.. 	
var// 
cb// 
=// 
(// 
CheckboxControl// %
)//% &
new//' *
CheckboxBuilder//+ :
(//: ;
)//; <
.//< =
Label//= B
(//B C
label//C H
)//H I
.//I J
Check//J O
(//O P
	isChecked//P Y
)//Y Z
;//Z [
return00 
this00 
.00 
Chain00 
(00 
p00 
=>00  "
p00# $
.00$ %
_config00% ,
.00, -
Contents00- 5
.005 6
Add006 9
(009 :
cb00: <
)00< =
)00= >
;00> ?
}11 	
public33 
ParagraphBuilder33 
	Alignment33  )
(33) *
HorizontalAlignment33* =
	alignment33> G
)33G H
{44 	
return55 
this55 
.55 
Chain55 
(55 
p55 
=>55  "
p55# $
.55$ %
_config55% ,
.55, -
HorizontalAlignment55- @
=55A B
	alignment55C L
)55L M
;55M N
}66 	
public88 
ParagraphBuilder88 
	AlignLeft88  )
(88) *
)88* +
{99 	
return:: 
this:: 
.:: 
Chain:: 
(:: 
p:: 
=>::  "
p::# $
.::$ %
_config::% ,
.::, -
HorizontalAlignment::- @
=::A B
HorizontalAlignment::C V
.::V W
Left::W [
)::[ \
;::\ ]
};; 	
public== 
ParagraphBuilder== 

AlignRight==  *
(==* +
)==+ ,
{>> 	
return?? 
this?? 
.?? 
Chain?? 
(?? 
p?? 
=>??  "
p??# $
.??$ %
_config??% ,
.??, -
HorizontalAlignment??- @
=??A B
HorizontalAlignment??C V
.??V W
Right??W \
)??\ ]
;??] ^
}@@ 	
publicBB 
ParagraphBuilderBB 
AlignCenterBB  +
(BB+ ,
)BB, -
{CC 	
returnDD 
thisDD 
.DD 
ChainDD 
(DD 
pDD 
=>DD  "
pDD# $
.DD$ %
_configDD% ,
.DD, -
HorizontalAlignmentDD- @
=DDA B
HorizontalAlignmentDDC V
.DDV W
CenterDDW ]
)DD] ^
;DD^ _
}EE 	
publicGG 
ParagraphBuilderGG 
AlignJustifyGG  ,
(GG, -
)GG- .
{HH 	
returnII 
thisII 
.II 
ChainII 
(II 
pII 
=>II  "
pII# $
.II$ %
_configII% ,
.II, -
HorizontalAlignmentII- @
=IIA B
HorizontalAlignmentIIC V
.IIV W
	JustifiedIIW `
)II` a
;IIa b
}JJ 	
publicLL 
ParagraphBuilderLL 
BoldLL  $
(LL$ %
boolLL% )
boldLL* .
=LL/ 0
trueLL1 5
)LL5 6
{MM 	
returnNN 
thisNN 
.NN 
ChainNN 
(NN 
pNN 
=>NN  "
pNN# $
.NN$ %
_configNN% ,
.NN, -
BoldNN- 1
=NN2 3
boldNN4 8
)NN8 9
;NN9 :
}OO 	
publicQQ 
ParagraphBuilderQQ 
FontSizeQQ  (
(QQ( )
UnitQQ) -
fontSizeQQ. 6
)QQ6 7
{RR 	
returnSS 
thisSS 
.SS 
ChainSS 
(SS 
pSS 
=>SS  "
pSS# $
.SS$ %
_configSS% ,
.SS, -
FontSizeSS- 5
=SS6 7
fontSizeSS8 @
)SS@ A
;SSA B
}TT 	
publicVV 
ParagraphBuilderVV 
BulletVV  &
(VV& '
)VV' (
{WW 	
returnXX 
thisXX 
.XX 
ChainXX 
(XX 
pXX 
=>XX  "
pXX# $
.XX$ %
_configXX% ,
.XX, -
BulletsXX- 4
=XX5 6
trueXX7 ;
)XX; <
;XX< =
}YY 	
public[[ 
ParagraphBuilder[[ 
SpacingBefore[[  -
([[- .
Unit[[. 2
value[[3 8
)[[8 9
{\\ 	
return]] 
this]] 
.]] 
Chain]] 
(]] 
p]] 
=>]]  "
p]]# $
.]]$ %
_config]]% ,
.]], -
SpacingBefore]]- :
=]]; <
value]]= B
)]]B C
;]]C D
}^^ 	
public`` 
ParagraphBuilder`` 
SpacingAfter``  ,
(``, -
Unit``- 1
value``2 7
)``7 8
{aa 	
returnbb 
thisbb 
.bb 
Chainbb 
(bb 
pbb 
=>bb  "
pbb# $
.bb$ %
_configbb% ,
.bb, -
SpacingAfterbb- 9
=bb: ;
valuebb< A
)bbA B
;bbB C
}cc 	
publicee 
ParagraphBuilderee 
	TopBorderee  )
(ee) *
uintee* .
sizeee/ 3
=ee4 5
$numee6 8
,ee8 9
BorderValuesee: F
	lineStyleeeG P
=eeQ R
BorderValueseeS _
.ee_ `
Singleee` f
)eef g
{ff 	
returngg 
thisgg 
.gg 
Chaingg 
(gg 
pgg 
=>gg  "
pgg# $
.gg$ %
_configgg% ,
.gg, -
Bordersgg- 4
.gg4 5
	TopBordergg5 >
=gg? @
newggA D
	TopBorderggE N
{hh 
Valii 
=ii 
	lineStyleii 
,ii  
Sizejj 
=jj 
sizejj 
}kk 
)kk 
;kk 
}ll 	
publicnn 
ParagraphBuildernn 

LeftBordernn  *
(nn* +
uintnn+ /
sizenn0 4
=nn5 6
$numnn7 9
,nn9 :
BorderValuesnn; G
	lineStylennH Q
=nnR S
BorderValuesnnT `
.nn` a
Singlenna g
)nng h
{oo 	
returnpp 
thispp 
.pp 
Chainpp 
(pp 
ppp 
=>pp  "
ppp# $
.pp$ %
_configpp% ,
.pp, -
Borderspp- 4
.pp4 5

LeftBorderpp5 ?
=pp@ A
newppB E

LeftBorderppF P
{qq 
Valrr 
=rr 
	lineStylerr 
,rr  
Sizess 
=ss 
sizess 
}tt 
)tt 
;tt 
}uu 	
publicww 
ParagraphBuilderww 
RightBorderww  +
(ww+ ,
uintww, 0
sizeww1 5
=ww6 7
$numww8 :
,ww: ;
BorderValuesww< H
	lineStylewwI R
=wwS T
BorderValueswwU a
.wwa b
Singlewwb h
)wwh i
{xx 	
returnyy 
thisyy 
.yy 
Chainyy 
(yy 
pyy 
=>yy  "
pyy# $
.yy$ %
_configyy% ,
.yy, -
Bordersyy- 4
.yy4 5
RightBorderyy5 @
=yyA B
newyyC F
RightBorderyyG R
{zz 
Val{{ 
={{ 
	lineStyle{{ 
,{{  
Size|| 
=|| 
size|| 
}}} 
)}} 
;}} 
}~~ 	
public
 
ParagraphBuilder
 
BottomBorder
  ,
(
, -
uint
- 1
size
2 6
=
7 8
$num
9 ;
,
; <
BorderValues
= I
	lineStyle
J S
=
T U
BorderValues
V b
.
b c
Single
c i
)
i j
{
 	
return
 
this
 
.
 
Chain
 
(
 
p
 
=>
  "
p
# $
.
$ %
_config
% ,
.
, -
Borders
- 4
.
4 5
BottomBorder
5 A
=
B C
new
D G
BottomBorder
H T
{
 
Val
 
=
 
	lineStyle
 
,
  
Size
 
=
 
size
 
}
 
)
 
;
 
}
 	
public
 
ParagraphBuilder
 

AllBorders
  *
(
* +
uint
+ /
size
0 4
=
5 6
$num
7 9
,
9 :
BorderValues
; G
	lineStyle
H Q
=
R S
BorderValues
T `
.
` a
Single
a g
)
g h
{
 	
	TopBorder
 
(
 
size
 
,
 
	lineStyle
 %
)
% &
;
& '

LeftBorder
 
(
 
size
 
,
 
	lineStyle
 &
)
& '
;
' (
RightBorder
 
(
 
size
 
,
 
	lineStyle
 '
)
' (
;
( )
BottomBorder
 
(
 
size
 
,
 
	lineStyle
 (
)
( )
;
) *
return
 
this
 
;
 
}
 	
}
 
} ö
VC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Builders\RowBuilder.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Builders# +
{ 
public 

class 

RowBuilder 
{ 
private		 
readonly		 
	RowConfig		 "
_config		# *
=		+ ,
new		- 0
	RowConfig		1 :
(		: ;
)		; <
;		< =
internal 

RowBuilder 
( 
) 
{ 
}  !
public 

RowBuilder 
EnsureColumns '
(' (
int( +
columns, 3
)3 4
{ 	
return 
this 
. 
Chain 
( 
p 
=>  "
{ 
if 
( 
p 
. 
_config 
. 
Cells #
.# $
Count$ )
>=* ,
columns- 4
)4 5
{ 
return 
; 
} 
foreach 
( 
var 
col  
in! #

Enumerable$ .
.. /
Range/ 4
(4 5
$num5 6
,6 7
columns8 ?
-@ A
pB C
.C D
_configD K
.K L
CellsL Q
.Q R
CountR W
)W X
)X Y
{ 
p 
. 
_config 
. 
Cells #
.# $
Add$ '
(' (
CellBuilder( 3
.3 4
	EmptyCell4 =
(= >
)> ?
)? @
;@ A
} 
} 
) 
; 
} 	
public 
static 
implicit 
operator '
Row( +
(+ ,

RowBuilder, 6
builder7 >
)> ?
{ 	
return 
new 
Row 
( 
builder "
." #
_config# *
)* +
;+ ,
}   	
public"" 

RowBuilder"" 
Add"" 
("" 
params"" $
Cell""% )
["") *
]""* +
cells"", 1
)""1 2
{## 	
return%% 
this%% 
.%% 
Chain%% 
(%% 
p%% 
=>%%  "
{&& 
if'' 
('' 
cells'' 
!='' 
null'' !
)''! "
{(( 
p)) 
.)) 
_config)) 
.)) 
Cells)) #
.))# $
AddRange))$ ,
()), -
cells))- 2
.))2 3
Select))3 9
())9 :
c)): ;
=>))< >
c))? @
??))A C
new))D G
CellBuilder))H S
())S T
)))T U
)))U V
)))V W
;))W X
}** 
}++ 
)++ 
;++ 
},, 	
}-- 
}.. ©#
ZC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Builders\SectionBuilder.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Builders# +
{ 
public 

class 
SectionBuilder 
{ 
private		 
readonly		 
SectionConfig		 &
_config		' .
=		/ 0
new		1 4
SectionConfig		5 B
(		B C
)		C D
;		D E
internal 
SectionBuilder 
(  
)  !
{" #
}$ %
public 
static 
implicit 
operator '
Section( /
(/ 0
SectionBuilder0 >
builder? F
)F G
{ 	
return 
new 
Section 
( 
builder &
.& '
_config' .
). /
;/ 0
} 	
public 
SectionBuilder 
Add !
(! "
params" (
ContentElement) 7
[7 8
]8 9
contents: B
)B C
{ 	
return 
this 
. 
Chain 
( 
p 
=>  "
p# $
.$ %
_config% ,
., -
Contents- 5
.5 6
AddRange6 >
(> ?
contents? G
.G H
WhereH M
(M N
xN O
=>P R
xS T
!=U W
nullX \
)\ ]
)] ^
)^ _
;_ `
} 	
public 
SectionBuilder 
Orientation )
() *
PageOrientation* 9
orientation: E
)E F
{ 	
return 
this 
. 
Chain 
( 
p 
=>  "
p# $
.$ %
_config% ,
., -
Orientation- 8
=9 :
orientation; F
)F G
;G H
} 	
public 
SectionBuilder 
PageSize &
(& '
PageSize' /
pageSize0 8
)8 9
{ 	
return 
this 
. 
Chain 
( 
p 
=>  "
p# $
.$ %
_config% ,
., -
PageSize- 5
=6 7
pageSize8 @
)@ A
;A B
} 	
public!! 
SectionBuilder!! 
PageMargins!! )
(!!) *!
PredefinedPageMargins!!* ?
pageMargins!!@ K
)!!K L
{"" 	
return## 
this## 
.## 
Chain## 
(## 
p## 
=>##  "
p### $
.##$ %
_config##% ,
.##, -
PageMargins##- 8
=##9 :
pageMargins##; F
)##F G
;##G H
}$$ 	
public&& 
SectionBuilder&& 
	AddHeader&& '
(&&' (
params&&( .
ContentElement&&/ =
[&&= >
]&&> ?
contents&&@ H
)&&H I
{'' 	
return(( 
this(( 
.(( 
Chain(( 
((( 
p(( 
=>((  "
p((# $
.(($ %
_config((% ,
.((, -
Header((- 3
.((3 4
AddRange((4 <
(((< =
contents((= E
.((E F
Where((F K
(((K L
x((L M
=>((N P
x((Q R
!=((S U
null((V Z
)((Z [
)(([ \
)((\ ]
;((] ^
})) 	
public++ 
SectionBuilder++ 
	AddFooter++ '
(++' (
params++( .
ContentElement++/ =
[++= >
]++> ?
contents++@ H
)++H I
{,, 	
return-- 
this-- 
.-- 
Chain-- 
(-- 
p-- 
=>--  "
p--# $
.--$ %
_config--% ,
.--, -
Footer--- 3
.--3 4
AddRange--4 <
(--< =
contents--= E
.--E F
Where--F K
(--K L
x--L M
=>--N P
x--Q R
!=--S U
null--V Z
)--Z [
)--[ \
)--\ ]
;--] ^
}.. 	
}// 
}00 ï_
XC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Builders\TableBuilder.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Builders# +
{ 
public		 

class		 
TableBuilder		 
{

 
private 
readonly 
TableConfig $
_config% ,
=- .
new/ 2
TableConfig3 >
(> ?
)? @
;@ A
internal 
TableBuilder 
( 
) 
{  !
}" #
public 
static 
implicit 
operator '
Table( -
(- .
TableBuilder. :
builder; B
)B C
{ 	
return 
new 
Table 
( 
builder $
.$ %
_config% ,
), -
;- .
} 	
public 
TableBuilder 
Add 
(  
params  &
Row' *
[* +
]+ ,
rows- 1
)1 2
{ 	
return 
this 
. 
Chain 
( 
p 
=>  "
{ 
if 
( 
rows 
!= 
null  
)  !
{ 
p 
. 
_config 
. 
Rows "
." #
AddRange# +
(+ ,
rows, 0
.0 1
Where1 6
(6 7
r7 8
=>9 ;
r< =
!=> @
nullA E
)E F
)F G
;G H
} 
} 
) 
; 
} 	
public 
TableBuilder 
Width !
(! "
Unit" &
unit' +
)+ ,
{   	
return!! 
this!! 
.!! 
Chain!! 
(!! 
p!! 
=>!!  "
p!!# $
.!!$ %
_config!!% ,
.!!, -
Width!!- 2
=!!3 4
unit!!5 9
)!!9 :
;!!: ;
}"" 	
public$$ 
TableBuilder$$ 
CellMargins$$ '
($$' (
Unit$$( ,
all$$- 0
)$$0 1
{%% 	
return&& 
this&& 
.&& 
Chain&& 
(&& 
p&& 
=>&&  "
{'' 
p(( 
.(( 
_config(( 
.(( 
CellLeftMargin(( (
=(() *
all((+ .
;((. /
p)) 
.)) 
_config)) 
.)) 
CellRightMargin)) )
=))* +
all)), /
;))/ 0
p** 
.** 
_config** 
.** 
CellTopMargin** '
=**( )
all*** -
;**- .
p++ 
.++ 
_config++ 
.++ 
CellBottomMargin++ *
=+++ ,
all++- 0
;++0 1
},, 
),, 
;,, 
}-- 	
public// 
TableBuilder// 
CellMargins// '
(//' (
Unit//( ,
	leftRight//- 6
,//6 7
Unit//8 <
	topBottom//= F
)//F G
{00 	
return11 
this11 
.11 
Chain11 
(11 
p11 
=>11  "
{22 
p33 
.33 
_config33 
.33 
CellLeftMargin33 (
=33) *
	leftRight33+ 4
;334 5
p44 
.44 
_config44 
.44 
CellRightMargin44 )
=44* +
	leftRight44, 5
;445 6
p55 
.55 
_config55 
.55 
CellTopMargin55 '
=55( )
	topBottom55* 3
;553 4
p66 
.66 
_config66 
.66 
CellBottomMargin66 *
=66+ ,
	topBottom66- 6
;666 7
}77 
)77 
;77 
}88 	
public:: 
TableBuilder::  
CellMarginsTopBottom:: 0
(::0 1
Unit::1 5
	topBottom::6 ?
)::? @
{;; 	
return<< 
this<< 
.<< 
Chain<< 
(<< 
p<< 
=><<  "
{== 
p>> 
.>> 
_config>> 
.>> 
CellTopMargin>> '
=>>( )
	topBottom>>* 3
;>>3 4
p?? 
.?? 
_config?? 
.?? 
CellBottomMargin?? *
=??+ ,
	topBottom??- 6
;??6 7
}@@ 
)@@ 
;@@ 
}AA 	
publicCC 
TableBuilderCC 
CellMarginsCC '
(CC' (
UnitCC( ,
leftCC- 1
,CC1 2
UnitCC3 7
topCC8 ;
,CC; <
UnitCC= A
bottomCCB H
,CCH I
UnitCCJ N
rightCCO T
)CCT U
{DD 	
returnEE 
thisEE 
.EE 
ChainEE 
(EE 
pEE 
=>EE  "
{FF 
ifGG 
(GG 
leftGG 
!=GG 
nullGG  
)GG  !
{HH 
pII 
.II 
_configII 
.II 
CellLeftMarginII ,
=II- .
leftII/ 3
;II3 4
}JJ 
ifLL 
(LL 
topLL 
!=LL 
nullLL 
)LL  
{MM 
pNN 
.NN 
_configNN 
.NN 
CellTopMarginNN +
=NN, -
topNN. 1
;NN1 2
}OO 
ifQQ 
(QQ 
bottomQQ 
!=QQ 
nullQQ "
)QQ" #
{RR 
pSS 
.SS 
_configSS 
.SS 
CellBottomMarginSS .
=SS/ 0
bottomSS1 7
;SS7 8
}TT 
ifVV 
(VV 
rightVV 
!=VV 
nullVV !
)VV! "
{WW 
pXX 
.XX 
_configXX 
.XX 
CellRightMarginXX -
=XX. /
rightXX0 5
;XX5 6
}YY 
}ZZ 
)ZZ 
;ZZ 
}[[ 	
public]] 
TableBuilder]] 
CellSpacing]] '
(]]' (
Unit]]( ,
value]]- 2
)]]2 3
{^^ 	
return__ 
this__ 
.__ 
Chain__ 
(__ 
p__ 
=>__  "
p__# $
.__$ %
_config__% ,
.__, -
CellSpacing__- 8
=__9 :
value__; @
)__@ A
;__A B
}`` 	
publicbb 
TableBuilderbb 
	TopBorderbb %
(bb% &
uintbb& *
sizebb+ /
=bb0 1
$numbb2 4
,bb4 5
BorderValuesbb6 B
	lineStylebbC L
=bbM N
BorderValuesbbO [
.bb[ \
Singlebb\ b
,bbb c
stringbbd j
colorbbk p
=bbq r
nullbbs w
)bbw x
{cc 	
returndd 
thisdd 
.dd 
Chaindd 
(dd 
pdd 
=>dd  "
pdd# $
.dd$ %
_configdd% ,
.dd, -
Bordersdd- 4
.dd4 5
	TopBorderdd5 >
=dd? @
newddA D
	TopBorderddE N
{ee 
Valff 
=ff 
	lineStyleff 
,ff  
Sizegg 
=gg 
sizegg 
,gg 
Colorhh 
=hh 
colorhh 
}ii 
)ii 
;ii 
}jj 	
publicll 
TableBuilderll 

LeftBorderll &
(ll& '
uintll' +
sizell, 0
=ll1 2
$numll3 5
,ll5 6
BorderValuesll7 C
	lineStylellD M
=llN O
BorderValuesllP \
.ll\ ]
Singlell] c
,llc d
stringlle k
colorlll q
=llr s
nullllt x
)llx y
{mm 	
returnnn 
thisnn 
.nn 
Chainnn 
(nn 
pnn 
=>nn  "
pnn# $
.nn$ %
_confignn% ,
.nn, -
Bordersnn- 4
.nn4 5

LeftBordernn5 ?
=nn@ A
newnnB E

LeftBordernnF P
{oo 
Valpp 
=pp 
	lineStylepp 
,pp  
Sizeqq 
=qq 
sizeqq 
,qq 
Colorrr 
=rr 
colorrr 
}ss 
)ss 
;ss 
}tt 	
publicvv 
TableBuildervv 
RightBordervv '
(vv' (
uintvv( ,
sizevv- 1
=vv2 3
$numvv4 6
,vv6 7
BorderValuesvv8 D
	lineStylevvE N
=vvO P
BorderValuesvvQ ]
.vv] ^
Singlevv^ d
,vvd e
stringvvf l
colorvvm r
=vvs t
nullvvu y
)vvy z
{ww 	
returnxx 
thisxx 
.xx 
Chainxx 
(xx 
pxx 
=>xx  "
pxx# $
.xx$ %
_configxx% ,
.xx, -
Bordersxx- 4
.xx4 5
RightBorderxx5 @
=xxA B
newxxC F
RightBorderxxG R
{yy 
Valzz 
=zz 
	lineStylezz 
,zz  
Size{{ 
={{ 
size{{ 
,{{ 
Color|| 
=|| 
color|| 
}}} 
)}} 
;}} 
}~~ 	
public
 
TableBuilder
 
BottomBorder
 (
(
( )
uint
) -
size
. 2
=
3 4
$num
5 7
,
7 8
BorderValues
9 E
	lineStyle
F O
=
P Q
BorderValues
R ^
.
^ _
Single
_ e
,
e f
string
g m
color
n s
=
t u
null
v z
)
z {
{
 	
return
 
this
 
.
 
Chain
 
(
 
p
 
=>
  "
p
# $
.
$ %
_config
% ,
.
, -
Borders
- 4
.
4 5
BottomBorder
5 A
=
B C
new
D G
BottomBorder
H T
{
 
Val
 
=
 
	lineStyle
 
,
  
Size
 
=
 
size
 
,
 
Color
 
=
 
color
 
}
 
)
 
;
 
}
 	
public
 
TableBuilder
 

AllBorders
 &
(
& '
uint
' +
size
, 0
=
1 2
$num
3 5
,
5 6
BorderValues
7 C
	lineStyle
D M
=
N O
BorderValues
P \
.
\ ]
Single
] c
,
c d
string
e k
color
l q
=
r s
null
t x
)
x y
{
 	
return
 
this
 
.
 
Chain
 
(
 
p
 
=>
  "
p
# $
.
$ %
	TopBorder
% .
(
. /
size
/ 3
,
3 4
	lineStyle
5 >
,
> ?
color
@ E
)
E F
.
 

LeftBorder
 
(
 
size
  
,
  !
	lineStyle
" +
,
+ ,
color
- 2
)
2 3
.
 
RightBorder
 
(
 
size
 !
,
! "
	lineStyle
# ,
,
, -
color
. 3
)
3 4
.
 
BottomBorder
 
(
 
size
 "
,
" #
	lineStyle
$ -
,
- .
color
/ 4
)
4 5
)
5 6
;
6 7
}
 	
}
 
} ê
^C:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Builders\TextContentBuilder.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Builders# +
{ 
public 

class 
TextContentBuilder #
{ 
private		 
readonly		 
TextContentConfig		 *
_config		+ 2
=		3 4
new		5 8
TextContentConfig		9 J
(		J K
)		K L
;		L M
internal 
TextContentBuilder #
(# $
string$ *
text+ /
)/ 0
{ 	
_config 
. 
Value 
= 
text  
;  !
} 	
public 
static 
implicit 
operator '
TextContent( 3
(3 4
TextContentBuilder4 F
builderG N
)N O
{ 	
return 
new 
TextContent "
(" #
builder# *
.* +
_config+ 2
)2 3
;3 4
} 	
public 
TextContentBuilder !
FontSize" *
(* +
Unit+ /
fontSize0 8
)8 9
{ 	
return 
this 
. 
Chain 
( 
p 
=>  "
p# $
.$ %
_config% ,
., -
FontSize- 5
=6 7
fontSize8 @
)@ A
;A B
} 	
public 
TextContentBuilder !
Bold" &
(& '
bool' +
?+ ,
bold- 1
=2 3
true4 8
)8 9
{ 	
return 
this 
. 
Chain 
( 
p 
=>  "
p# $
.$ %
_config% ,
., -
Bold- 1
=2 3
bold4 8
)8 9
;9 :
} 	
public 
TextContentBuilder !
Italic" (
(( )
bool) -
?- .
italic/ 5
=6 7
true8 <
)< =
{   	
return!! 
this!! 
.!! 
Chain!! 
(!! 
p!! 
=>!!  "
p!!# $
.!!$ %
_config!!% ,
.!!, -
Italic!!- 3
=!!4 5
italic!!6 <
)!!< =
;!!= >
}"" 	
public$$ 
TextContentBuilder$$ !
	Underline$$" +
($$+ ,
UnderlineValues$$, ;
?$$; <
line$$= A
=$$B C
UnderlineValues$$D S
.$$S T
Single$$T Z
)$$Z [
{%% 	
return&& 
this&& 
.&& 
Chain&& 
(&& 
p&& 
=>&&  "
p&&# $
.&&$ %
_config&&% ,
.&&, -
	Underline&&- 6
=&&7 8
line&&9 =
)&&= >
;&&> ?
}'' 	
}(( 
})) Ò
`C:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Converters\AlignmentConverter.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #

Converters# -
{ 
internal 
static 
class 
AlignmentConverter ,
{ 
public		 
static		 
Justification		 #
CreateJustification		$ 7
(		7 8
HorizontalAlignment		8 K
	alignment		L U
)		U V
{

 	
return 
new 
Justification $
{% &
Val& )
=* +
Convert, 3
(3 4
	alignment4 =
)= >
}> ?
;? @
} 	
public 
static 
JustificationValues )
Convert* 1
(1 2
HorizontalAlignment2 E
	alignmentF O
)O P
{ 	
switch 
( 
	alignment 
) 
{ 
case 
HorizontalAlignment (
.( )
Left) -
:- .
return 
JustificationValues .
.. /
Left/ 3
;3 4
case 
HorizontalAlignment (
.( )
Center) /
:/ 0
return 
JustificationValues .
.. /
Center/ 5
;5 6
case 
HorizontalAlignment (
.( )
Right) .
:. /
return 
JustificationValues .
.. /
Right/ 4
;4 5
case 
HorizontalAlignment (
.( )
	Justified) 2
:2 3
return 
JustificationValues .
.. /
Both/ 3
;3 4
default 
: 
throw 
new '
ArgumentOutOfRangeException 9
(9 :
nameof: @
(@ A
	alignmentA J
)J K
,K L
	alignmentM V
,V W
nullX \
)\ ]
;] ^
} 
} 	
} 
} 9
aC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Converters\PageMarginConverter.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #

Converters# -
{ 
internal 
class 
PageMarginConverter &
{		 
public

 
static

 

PageMargin

  $
PageMarginFromPredefined

! 9
(

9 :!
PredefinedPageMargins

: O

marginType

P Z
)

Z [
{ 	
var 
margins 
= 
_pageMargins &
(& '

marginType' 1
)1 2
;2 3
return 
new 

PageMargin !
{ 
Top 
= 

Int32Value  
.  !
	FromInt32! *
(* +
Convert+ 2
.2 3
ToInt323 :
(: ;
margins; B
.B C
topC F
.F G
ToDxaG L
(L M
)M N
)N O
)O P
,P Q
Left 
= 
UInt32Value "
." #

FromUInt32# -
(- .
Convert. 5
.5 6
ToUInt326 >
(> ?
margins? F
.F G
leftG K
.K L
ToDxaL Q
(Q R
)R S
)S T
)T U
,U V
Right 
= 
UInt32Value #
.# $

FromUInt32$ .
(. /
Convert/ 6
.6 7
ToUInt327 ?
(? @
margins@ G
.G H
rightH M
.M N
ToDxaN S
(S T
)T U
)U V
)V W
,W X
Bottom 
= 

Int32Value #
.# $
	FromInt32$ -
(- .
Convert. 5
.5 6
ToInt326 =
(= >
margins> E
.E F
bottomF L
.L M
ToDxaM R
(R S
)S T
)T U
)U V
,V W
Header 
= 
UInt32Value $
.$ %

FromUInt32% /
(/ 0
Convert0 7
.7 8
ToUInt328 @
(@ A
marginsA H
.H I
headerI O
.O P
ToDxaP U
(U V
)V W
)W X
)X Y
,Y Z
Footer 
= 
UInt32Value $
.$ %

FromUInt32% /
(/ 0
Convert0 7
.7 8
ToUInt328 @
(@ A
marginsA H
.H I
footerI O
.O P
ToDxaP U
(U V
)V W
)W X
)X Y
} 
; 
} 	
private 
static 
( 
Unit 
left !
,! "
Unit# '
top( +
,+ ,
Unit- 1
right2 7
,7 8
Unit9 =
bottom> D
,D E
UnitF J
headerK Q
,Q R
UnitS W
footerX ^
)^ _
_pageMargins` l
(l m!
PredefinedPageMargins !

marginType" ,
), -
{ 	
switch 
( 

marginType 
) 
{ 
case !
PredefinedPageMargins *
.* +
Normal+ 1
:1 2
return 
( 
new 
Unit  $
($ %
$num% '
,' (
UnitType) 1
.1 2
inch2 6
)6 7
,7 8
new9 <
Unit= A
(A B
$numB D
,D E
UnitTypeF N
.N O
inchO S
)S T
,T U
newV Y
UnitZ ^
(^ _
$num_ a
,a b
UnitTypec k
.k l
inchl p
)p q
,q r
new   
Unit    
(    !
$num  ! #
,  # $
UnitType  % -
.  - .
inch  . 2
)  2 3
,  3 4
new  5 8
Unit  9 =
(  = >
$num  > C
,  C D
UnitType  E M
.  M N
cm  N P
)  P Q
,  Q R
new  S V
Unit  W [
(  [ \
$num  \ a
,  a b
UnitType  c k
.  k l
cm  l n
)  n o
)  o p
;  p q
case"" !
PredefinedPageMargins"" *
.""* +
Narrow""+ 1
:""1 2
return## 
(## 
new## 
Unit##  $
(##$ %
$num##% )
,##) *
UnitType##+ 3
.##3 4
inch##4 8
)##8 9
,##9 :
new##; >
Unit##? C
(##C D
$num##D H
,##H I
UnitType##J R
.##R S
inch##S W
)##W X
,##X Y
new##Z ]
Unit##^ b
(##b c
$num##c g
,##g h
UnitType##i q
.##q r
inch##r v
)##v w
,##w x
new$$ 
Unit$$  
($$  !
$num$$! %
,$$% &
UnitType$$' /
.$$/ 0
inch$$0 4
)$$4 5
,$$5 6
new$$7 :
Unit$$; ?
($$? @
$num$$@ E
,$$E F
UnitType$$G O
.$$O P
cm$$P R
)$$R S
,$$S T
new$$U X
Unit$$Y ]
($$] ^
$num$$^ c
,$$c d
UnitType$$e m
.$$m n
cm$$n p
)$$p q
)$$q r
;$$r s
case&& !
PredefinedPageMargins&& *
.&&* +
Moderate&&+ 3
:&&3 4
return'' 
('' 
new'' 
Unit''  $
(''$ %
$num''% )
,'') *
UnitType''+ 3
.''3 4
cm''4 6
)''6 7
,''7 8
new''9 <
Unit''= A
(''A B
$num''B D
,''D E
UnitType''F N
.''N O
inch''O S
)''S T
,''T U
new''V Y
Unit''Z ^
(''^ _
$num''_ d
,''d e
UnitType''f n
.''n o
cm''o q
)''q r
,''r s
new(( 
Unit((  
(((  !
$num((! #
,((# $
UnitType((% -
.((- .
inch((. 2
)((2 3
,((3 4
new((5 8
Unit((9 =
(((= >
$num((> C
,((C D
UnitType((E M
.((M N
cm((N P
)((P Q
,((Q R
new((S V
Unit((W [
((([ \
$num((\ a
,((a b
UnitType((c k
.((k l
cm((l n
)((n o
)((o p
;((p q
default** 
:** 
throw++ 
new++ '
ArgumentOutOfRangeException++ 9
(++9 :
nameof++: @
(++@ A

marginType++A K
)++K L
,++L M

marginType++N X
,++X Y
null++Z ^
)++^ _
;++_ `
},, 
}-- 	
}.. 
}// ¬'
_C:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Converters\PageSizeConverter.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #

Converters# -
{ 
internal 
static 
class 
PageSizeConverter +
{ 
public		 
static		 
PageSize		 
PageSize		 '
(		' (
Models		( .
.		. /
PageSize		/ 7
pageSize		8 @
=		A B
Models		C I
.		I J
PageSize		J R
.		R S
A4		S U
,		U V
PageOrientation

 
orientation

 '
=

( )
PageOrientation

* 9
.

9 :
Portrait

: B
)

B C
{ 	
var 
sizes 
= 
	_pageSize !
(! "
pageSize" *
,* +
orientation, 7
)7 8
;8 9
return 
new 
PageSize 
{ 
Width 
= 
Convert 
.  
ToUInt32  (
(( )
sizes) .
.. /
width/ 4
.4 5
ToDxa5 :
(: ;
); <
)< =
,= >
Height 
= 
Convert  
.  !
ToUInt32! )
() *
sizes* /
./ 0
height0 6
.6 7
ToDxa7 <
(< =
)= >
)> ?
,? @
Code 
= 
( 
ushort 
) 
pageSize  (
} 
; 
} 	
private 
static 
( 
Unit 
width "
," #
Unit$ (
height) /
)/ 0
	_pageSize1 :
(: ;
Models; A
.A B
PageSizeB J
pageSizeK S
,S T
PageOrientationU d
orientatione p
)p q
{ 	
( 
Unit 
width 
, 
Unit 
height $
)$ %
result& ,
;, -
switch 
( 
pageSize 
) 
{ 
case 
Models 
. 
PageSize $
.$ %
Letter% +
:+ ,
result 
= 
( 
new !
Unit" &
(& '
$num' -
,- .
UnitType/ 7
.7 8
cm8 :
): ;
,; <
new= @
UnitA E
(E F
$numF L
,L M
UnitTypeN V
.V W
cmW Y
)Y Z
)Z [
;[ \
break 
; 
case   
Models   
.   
PageSize   $
.  $ %
A5  % '
:  ' (
result!! 
=!! 
(!! 
new!! !
Unit!!" &
(!!& '
$num!!' ,
,!!, -
UnitType!!. 6
.!!6 7
cm!!7 9
)!!9 :
,!!: ;
new!!< ?
Unit!!@ D
(!!D E
$num!!E H
,!!H I
UnitType!!J R
.!!R S
cm!!S U
)!!U V
)!!V W
;!!W X
break"" 
;"" 
case$$ 
Models$$ 
.$$ 
PageSize$$ $
.$$$ %
A4$$% '
:$$' (
result%% 
=%% 
(%% 
new%% !
Unit%%" &
(%%& '
$num%%' *
,%%* +
UnitType%%, 4
.%%4 5
cm%%5 7
)%%7 8
,%%8 9
new%%: =
Unit%%> B
(%%B C
$num%%C H
,%%H I
UnitType%%J R
.%%R S
cm%%S U
)%%U V
)%%V W
;%%W X
break&& 
;&& 
default(( 
:(( 
throw)) 
new)) '
ArgumentOutOfRangeException)) 9
())9 :
nameof)): @
())@ A
pageSize))A I
)))I J
,))J K
pageSize))L T
,))T U
null))V Z
)))Z [
;))[ \
}** 
if,, 
(,, 
orientation,, 
==,, 
PageOrientation,, .
.,,. /
Portrait,,/ 7
),,7 8
{-- 
return.. 
result.. 
;.. 
}// 
var11 
tmp11 
=11 
result11 
.11 
height11 #
;11# $
result22 
.22 
height22 
=22 
result22 "
.22" #
width22# (
;22( )
result33 
.33 
width33 
=33 
tmp33 
;33 
return55 
result55 
;55 
}66 	
}77 
}88 ú
SC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\ExtensionMethods.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
{ 
public 

static 
class 
ExtensionMethods (
{		 
public

 
static

 
IEnumerable

 !
<

! "
Indexed

" )
<

) *
T

* +
>

+ ,
>

, -
	AsIndexed

. 7
<

7 8
T

8 9
>

9 :
(

: ;
this

; ?
IEnumerable

@ K
<

K L
T

L M
>

M N
values

O U
)

U V
{ 	
var 

enumerable 
= 
values #
.# $
ToList$ *
(* +
)+ ,
;, -
var 
count 
= 

enumerable "
." #
Count# (
(( )
)) *
;* +
return 

enumerable 
. 
Select $
($ %
(% &
x& '
,' (
i) *
)* +
=>, .
new/ 2
Indexed3 :
<: ;
T; <
>< =
(= >
i> ?
,? @
countA F
,F G
xH I
)I J
)J K
;K L
} 	
public 
static 
string 
StringTogether +
(+ ,
this, 0
IEnumerable1 <
<< =
Indexed= D
<D E
stringE K
>K L
>L M
valuesN T
,T U
stringV \
	separator] f
,f g
string 
lastSeparator  
=! "
null# '
)' (
{ 	
var 
result 
= 
new 
StringBuilder *
(* +
)+ ,
;, -
foreach 
( 
var 
value 
in !
values" (
)( )
{ 
if 
( 
value 
. 
IsFirst !
)! "
{ 
result 
. 
Append !
(! "
value" '
.' (
Value( -
)- .
;. /
continue 
; 
} 
if 
( 
! 
value 
. 
IsLast !
)! "
{   
result!! 
.!! 
Append!! !
(!!! "
	separator!!" +
??!!, .
string!!/ 5
.!!5 6
Empty!!6 ;
)!!; <
;!!< =
result"" 
."" 
Append"" !
(""! "
value""" '
.""' (
Value""( -
)""- .
;"". /
continue## 
;## 
}$$ 
result&& 
.&& 
Append&& 
(&& 
lastSeparator&& +
??&&, .
	separator&&/ 8
??&&9 ;
string&&< B
.&&B C
Empty&&C H
)&&H I
;&&I J
result'' 
.'' 
Append'' 
('' 
value'' #
.''# $
Value''$ )
)'') *
;''* +
}(( 
return** 
result** 
.** 
ToString** "
(**" #
)**# $
;**$ %
}++ 	
},, 
}-- Ô
MC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Extensions.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
{ 
internal 
static 
class 

Extensions $
{ 
public		 
static		 
T		 
	CloneNode		 !
<		! "
T		" #
>		# $
(		$ %
this		% )
T		* +
element		, 3
,		3 4
bool		5 9
deep		: >
=		? @
true		A E
)		E F
where

 
T

 
:

 
OpenXmlElement

 $
{ 	
return 
( 
T 
) 
element 
. 
	CloneNode (
(( )
deep) -
)- .
;. /
} 	
public 
static 
T 
Chain 
< 
T 
>  
(  !
this! %
T& '
obj( +
,+ ,
Action- 3
<3 4
T4 5
>5 6
action7 =
)= >
{ 	
action 
( 
obj 
) 
; 
return 
obj 
; 
} 	
public 
static 
T 
Chain 
< 
T 
,  
T1! #
># $
($ %
this% )
T* +
obj, /
,/ 0
T11 3
arg4 7
,7 8
Action9 ?
<? @
T@ A
,A B
T1C E
>E F
actionG M
)M N
{ 	
action 
( 
obj 
, 
arg 
) 
; 
return 
obj 
; 
} 	
public 
static 
T 
Chain 
< 
T 
,  
T1! #
,# $
T2% '
>' (
(( )
this) -
T. /
obj0 3
,3 4
T15 7
arg18 <
,< =
T2> @
arg2A E
,E F
ActionG M
<M N
TN O
,O P
T1Q S
,S T
T2U W
>W X
actionY _
)_ `
{ 	
action 
( 
obj 
, 
arg1 
, 
arg2 "
)" #
;# $
return 
obj 
; 
} 	
public!! 
static!! 

BorderType!!  
SetBorderColor!!! /
(!!/ 0
this!!0 4

BorderType!!5 ?
obj!!@ C
,!!C D
string!!E K
color!!L Q
)!!Q R
{"" 	
obj## 
.## 
Color## 
=## 
color## 
;## 
return$$ 
obj$$ 
;$$ 
}%% 	
}&& 
}'' Þ#
`C:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\ModelConfiguration\CellConfig.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
ModelConfiguration# 5
{ 
internal 
class 

CellConfig 
{ 
public		 
TableCellProperties		 "
CellProperties		# 1
(		1 2
)		2 3
{

 	
var 
result 
= 
new 
TableCellProperties 0
(0 1
)1 2
;2 3
if 
( 
NoWrap 
. 
HasValue 
)  
{ 
result 
. 
NoWrap 
= 
new  #
NoWrap$ *
{+ ,
Val, /
=0 1
NoWrap2 8
.8 9
Value9 >
?? @
OnOffOnlyValuesA P
.P Q
OnQ S
:T U
OnOffOnlyValuesV e
.e f
Offf i
}i j
;j k
} 
if 
( 
Width 
!= 
null 
) 
{ 
result 
. 
TableCellWidth %
=& '
Width( -
.- .
ToTableWidthType. >
<> ?
TableCellWidth? M
>M N
(N O
)O P
;P Q
} 
result 
. 
TableCellBorders #
=$ %
Borders& -
;- .
result 
. 
TableCellMargin "
=# $
Margins% ,
;, -
result 
. 
Shading 
= 
BackgroundColor ,
;, -
result 
. &
TableCellVerticalAlignment -
=. /
new0 3&
TableCellVerticalAlignment4 N
{ 
Val 
= 
VerticalAlignment (
}( )
;) *
if   
(   
ColSpan   
>   
$num   
)   
{!! 
result"" 
."" 
GridSpan"" 
=""  !
new""" %
GridSpan""& .
{""/ 0
Val""0 3
=""4 5
ColSpan""6 =
}""= >
;""> ?
}## 
return%% 
result%% 
;%% 
}&& 	
public)) 
bool)) 
?)) 
NoWrap)) 
{)) 
get)) !
;))! "
set))# &
;))& '
}))( )
public++ 
List++ 
<++ 
ContentElement++ "
>++" #
Contents++$ ,
{++- .
get++/ 2
;++2 3
}++4 5
=++6 7
new++8 ;
List++< @
<++@ A
ContentElement++A O
>++O P
(++P Q
)++Q R
;++R S
public-- 
Unit-- 
Width-- 
{-- 
get-- 
;--  
set--! $
;--$ %
}--& '
public// 
TableCellBorders// 
Borders//  '
{//( )
get//* -
;//- .
}/// 0
=//1 2
new//3 6
TableCellBorders//7 G
(//G H
)//H I
;//I J
public11 
TableCellMargin11 
Margins11 &
{11' (
get11) ,
;11, -
}11. /
=110 1
new112 5
TableCellMargin116 E
(11E F
)11F G
;11G H
public33 
	TableCell33 

Properties33 #
{33$ %
get33& )
;33) *
set33+ .
;33. /
}330 1
public55 
Shading55 
BackgroundColor55 &
{55' (
get55) ,
;55, -
}55. /
=550 1
new552 5
Shading556 =
(55= >
)55> ?
;55? @
public77 
int77 
ColSpan77 
{77 
get77  
;77  !
set77" %
;77% &
}77' (
=77) *
$num77+ ,
;77, -
public99 (
TableVerticalAlignmentValues99 +
VerticalAlignment99, =
{99> ?
get99@ C
;99C D
set99E H
;99H I
}99J K
=99L M(
TableVerticalAlignmentValues99N j
.99j k
Bottom99k q
;99q r
}:: 
};; Ô
kC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\ModelConfiguration\CheckboxControlConfig.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
ModelConfiguration# 5
{ 
internal 
class !
CheckboxControlConfig (
{ 
public 
string 
Label 
{ 
get !
;! "
set# &
;& '
}( )
public 
bool 
? 
Checked 
{ 
get "
;" #
set$ '
;' (
}) *
} 
}		 §
hC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\ModelConfiguration\ImageContentConfig.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
ModelConfiguration# 5
{6 7
internal 
class 
ImageContentConfig %
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
} 
} ÕQ
eC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\ModelConfiguration\ParagraphConfig.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
ModelConfiguration# 5
{ 
internal 
class 
ParagraphConfig "
{ 
public 
bool 
? 
Bold 
{ 
get 
;  
set! $
;$ %
}& '
public 
Unit 
FontSize 
{ 
get "
;" #
set$ '
;' (
}) *
public 
Unit 
SpacingBefore !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
Unit 
SpacingAfter  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
HorizontalAlignment "
?" #
HorizontalAlignment$ 7
{8 9
get: =
;= >
set? B
;B C
}D E
public 
List 
< 
IContent 
> 
Contents &
{' (
get) ,
;, -
}. /
=0 1
new2 5
List6 :
<: ;
IContent; C
>C D
(D E
)E F
;F G
public 
ParagraphBorders 
Borders  '
{( )
get* -
;- .
}/ 0
=1 2
new3 6
ParagraphBorders7 G
(G H
)H I
;I J
public 
bool 
? 
Bullets 
{ 
get "
;" #
set$ '
;' (
}) *
public   
ParagraphProperties   ""
GetParagraphProperties  # 9
(  9 :
)  : ;
{!! 	
var"" 
result"" 
="" 
new"" 
ParagraphProperties"" 0
(""0 1
)""1 2
;""2 3
if$$ 
($$ 
HorizontalAlignment$$ #
.$$# $
HasValue$$$ ,
)$$, -
{%% 
result&& 
.&& 
Justification&& $
=&&% &
AlignmentConverter&&' 9
.&&9 :
CreateJustification&&: M
(&&M N
HorizontalAlignment&&N a
.&&a b
Value&&b g
)&&g h
;&&h i
}'' 
result)) 
.)) 
SpacingBetweenLines)) &
=))' (
new))) ,
SpacingBetweenLines))- @
())@ A
)))A B
;))B C
if++ 
(++ 
SpacingBefore++ 
!=++  
null++! %
)++% &
{,, 
result-- 
.-- 
SpacingBetweenLines-- *
.--* +
Before--+ 1
=--2 3
SpacingBefore--4 A
;--A B
}.. 
if00 
(00 
SpacingAfter00 
!=00 
null00  $
)00$ %
{11 
result22 
.22 
SpacingBetweenLines22 *
.22* +
After22+ 0
=221 2
SpacingAfter223 ?
;22? @
}33 
result55 
.55 
ParagraphBorders55 #
=55$ %
Borders55& -
;55- .
if77 
(77 
Bullets77 
==77 
true77 
)77  
{88 
result99 
.99 
ParagraphStyleId99 '
=99( )
new99* -
ParagraphStyleId99. >
{99? @
Val99@ C
=99D E
$str99F U
}99U V
;99V W
result:: 
.:: 
NumberingProperties:: *
=::+ ,
new::- 0
NumberingProperties::1 D
{;; #
NumberingLevelReference<< +
=<<, -
new<<. 1#
NumberingLevelReference<<2 I
{<<J K
Val<<K N
=<<O P
$num<<Q R
}<<R S
,<<S T
NumberingId== 
===  !
new==" %
NumberingId==& 1
{==2 3
Val==3 6
===7 8
$num==9 :
}==: ;
}>> 
;>> 
}HH 
returnJJ 
resultJJ 
;JJ 
}KK 	
publicMM 
RunPropertiesMM 
GetRunPropertiesMM -
(MM- .
)MM. /
{NN 	
varOO 
resultOO 
=OO 
newOO 
RunPropertiesOO *
(OO* +
)OO+ ,
;OO, -
ifQQ 
(QQ 
BoldQQ 
.QQ 
HasValueQQ 
)QQ 
{RR 
resultSS 
.SS 
BoldSS 
=SS 
newSS !
BoldSS" &
{SS' (
ValSS( +
=SS, -
BoldSS. 2
}SS2 3
;SS3 4
}TT 
ifVV 
(VV 
FontSizeVV 
!=VV 
nullVV  
)VV  !
{WW 
varXX 
mrpXX 
=XX 
newXX 
[XX 
]XX 
{YY 
newZZ &
ParagraphMarkRunPropertiesZZ 2
(ZZ2 3
new[[ 
FontSize[[ $
{[[% &
Val[[& )
=[[* +
FontSize[[, 4
}[[4 5
)\\ 
}]] 
;]] 
result__ 
.__ 
Append__ 
(__ 
mrp__ !
.__! "
AsEnumerable__" .
(__. /
)__/ 0
)__0 1
;__1 2
}`` 
returnbb 
resultbb 
;bb 
}cc 	
publicee 
IEnumerableee 
<ee 
Runee 
>ee 
GetRunsee  '
(ee' (
)ee( )
{ff 	
vargg 
runPropertiesgg 
=gg 
GetRunPropertiesgg  0
(gg0 1
)gg1 2
;gg2 3
foreachii 
(ii 
varii 
contentii  
inii! #
Contentsii$ ,
)ii, -
{jj 
ifkk 
(kk 
contentkk 
iskk 
TextContentkk *
textkk+ /
)kk/ 0
{ll 
yieldmm 
returnmm  
textmm! %
.mm% &
GetRunmm& ,
(mm, -
runPropertiesmm- :
)mm: ;
;mm; <
}nn 
ifpp 
(pp 
contentpp 
ispp 
ImageContentpp +
imgpp, /
)pp/ 0
{qq 
yieldrr 
returnrr  
imgrr! $
.rr$ %
GetRunrr% +
(rr+ ,
runPropertiesrr, 9
)rr9 :
;rr: ;
}ss 
ifuu 
(uu 
contentuu 
isuu 
CheckboxControluu .
checkboxuu/ 7
)uu7 8
{vv 
varww 
runww 
=ww 
newww !
Runww" %
{ww& '
RunPropertiesww' 4
=ww5 6
runPropertiesww7 D
.wwD E
	CloneNodewwE N
(wwN O
)wwO P
}wwP Q
;wwQ R
varyy 
cbyy 
=yy 
newyy  
CheckBoxyy! )
(yy) *
newzz 
Checkedzz #
{zz$ %
Valzz% (
=zz) *
checkboxzz+ 3
.zz3 4
	IsCheckedzz4 =
?zz> ?
OnOffValueszz@ K
.zzK L
OnezzL O
:zzP Q
OnOffValueszzR ]
.zz] ^
Zerozz^ b
}zzb c
,zzc d
new{{ 
CheckedState{{ (
{{{) *
Val{{* -
={{. /
$str{{0 6
,{{6 7
Font{{8 <
={{= >
$str{{? L
}{{L M
,{{M N
new|| 
UncheckedState|| *
{||+ ,
Val||, /
=||0 1
$str||2 8
,||8 9
Font||: >
=||? @
$str||A N
}||N O
)}} 
;}} 
var 
cbSdt 
= 
new  #
SdtBlock$ ,
(, -
new
 
SdtProperties
 )
(
) *
new
 
Lock
  $
{
% &
Val
& )
=
* +
LockingValues
, 9
.
9 :
ContentLocked
: G
}
G H
,
H I
new
 

Appearance
  *
{
+ ,
Val
, /
=
0 1
SdtAppearance
2 ?
.
? @
Hidden
@ F
}
F G
,
G H
cb
I K
)
K L
,
L M
new
 
SdtContentBlock
 +
(
+ ,
new
 
Run
  #
(
# $
new
$ '

SymbolChar
( 2
{
 
Font
  $
=
% &
$str
' 4
,
4 5
Char
  $
=
% &
checkbox
' /
.
/ 0
	IsChecked
0 9
?
: ;
$str
< B
:
C D
$str
E K
}
 
)
 
)
 
)
 
;
 
run
 
.
 
AppendChild
 #
(
# $
cbSdt
$ )
)
) *
;
* +
yield
 
return
  
run
! $
;
$ %
if
 
(
 
!
 
string
 
.
   
IsNullOrWhiteSpace
  2
(
2 3
checkbox
3 ;
.
; <
Label
< A
)
A B
)
B C
{
 
yield
 
return
 $
new
% (
Run
) ,
(
, -
new
 
Text
  $
(
$ %
checkbox
% -
.
- .
Label
. 3
)
3 4
{
 
Space
  %
=
& ''
SpaceProcessingModeValues
( A
.
A B
Preserve
B J
}
 
)
 
{
 
RunProperties
 )
=
* +
runProperties
, 9
.
9 :
	CloneNode
: C
(
C D
)
D E
}
 
;
 
}
 
}
 
}
 
}
 	
}
 
} 
_C:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\ModelConfiguration\RowConfig.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
ModelConfiguration# 5
{ 
internal 
class 
	RowConfig 
{ 
public		 
List		 
<		 
Cell		 
>		 
Cells		 
{		  !
get		" %
;		% &
}		' (
=		) *
new		+ .
List		/ 3
<		3 4
Cell		4 8
>		8 9
(		9 :
)		: ;
;		; <
public 
TableRowProperties !
GetRowProperties" 2
(2 3
)3 4
{ 	
var 
result 
= 
new 
TableRowProperties /
(/ 0
)0 1
;1 2
return 
result 
; 
} 	
} 
} å9
cC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\ModelConfiguration\SectionConfig.cs
	namespace		 	

Frontforge		
 
.		 
OpenDocx		 
.		 
Core		 "
.		" #
ModelConfiguration		# 5
{

 
internal 
class 
SectionConfig  
{ 
public 
PageSize 
PageSize  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
PageSize1 9
.9 :
A4: <
;< =
public !
PredefinedPageMargins $
PageMargins% 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
=? @!
PredefinedPageMarginsA V
.V W
NormalW ]
;] ^
public 
PageOrientation 
Orientation *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
=9 :
PageOrientation; J
.J K
PortraitK S
;S T
public 
List 
< 
ContentElement "
>" #
Contents$ ,
{- .
get/ 2
;2 3
}4 5
=6 7
new8 ;
List< @
<@ A
ContentElementA O
>O P
(P Q
)Q R
;R S
public 
List 
< 
ContentElement "
>" #
Header$ *
{+ ,
get- 0
;0 1
}2 3
=4 5
new6 9
List: >
<> ?
ContentElement? M
>M N
(N O
)O P
;P Q
public 
List 
< 
ContentElement "
>" #
Footer$ *
{+ ,
get- 0
;0 1
}2 3
=4 5
new6 9
List: >
<> ?
ContentElement? M
>M N
(N O
)O P
;P Q
internal 
SectionProperties "
SectionProperties# 4
(4 5
MainDocumentPart5 E
mainPartF N
)N O
{ 	
var 
result 
= 
new 
SectionProperties .
(. /
PageSizeConverter !
.! "
PageSize" *
(* +
PageSize+ 3
,3 4
Orientation5 @
)@ A
,A B
PageMarginConverter #
.# $$
PageMarginFromPredefined$ <
(< =
PageMargins= H
)H I
)I J
;J K
if 
( 
Header 
? 
. 
Any 
( 
) 
==  
true! %
)% &
{   
CreateHeader!! 
(!! 
result!! #
,!!# $
mainPart!!% -
)!!- .
;!!. /
}"" 
if$$ 
($$ 
Footer$$ 
?$$ 
.$$ 
Any$$ 
($$ 
)$$ 
==$$  
true$$! %
)$$% &
{%% 
CreateFooter&& 
(&& 
result&& #
,&&# $
mainPart&&% -
)&&- .
;&&. /
}'' 
return)) 
result)) 
;)) 
}** 	
private-- 
void-- 
CreateHeader-- !
(--! "
SectionProperties--" 3
sectionProperties--4 E
,--E F
MainDocumentPart--G W
mainPart--X `
)--` a
{.. 	
var// 

headerPart// 
=// 
mainPart// %
.//% &

AddNewPart//& 0
<//0 1

HeaderPart//1 ;
>//; <
(//< =
)//= >
;//> ?
var00 
partId00 
=00 
mainPart00 !
.00! "
GetIdOfPart00" -
(00- .

headerPart00. 8
)008 9
;009 :

headerPart11 
.11 
Header11 
=11 
new11  #
Header11$ *
(11* +
Header11+ 1
.111 2
Where112 7
(117 8
x118 9
=>11: <
x11= >
!=11? A
null11B F
)11F G
.11G H
	AsIndexed11H Q
(11Q R
)11R S
.22 
Select22 
(22 
x22 
=>22 
x22 
.22 
Value22 $
.22$ %
Render22% +
(22+ ,
x22, -
.22- .
Index22. 3
,223 4
x225 6
.226 7
IsFirst227 >
,22> ?
x22@ A
.22A B
IsLast22B H
)22H I
)22I J
)22J K
;22K L
sectionProperties44 
.44 
AppendChild44 )
(44) *
new44* -
HeaderReference44. =
{44> ?
Id44? A
=44B C
partId44D J
,44J K
Type44L P
=44Q R
HeaderFooterValues44S e
.44e f
Default44f m
}44m n
)44n o
;44o p

headerPart66 
.66 
Header66 
.66 
Save66 "
(66" #
)66# $
;66$ %
}77 	
private99 
void99 
CreateFooter99 !
(99! "
SectionProperties99" 3
sectionProperties994 E
,99E F
MainDocumentPart99G W
mainPart99X `
)99` a
{:: 	
var;; 

footerPart;; 
=;; 
mainPart;; %
.;;% &

AddNewPart;;& 0
<;;0 1

FooterPart;;1 ;
>;;; <
(;;< =
);;= >
;;;> ?
var<< 
partId<< 
=<< 
mainPart<< !
.<<! "
GetIdOfPart<<" -
(<<- .

footerPart<<. 8
)<<8 9
;<<9 :

footerPart== 
.== 
Footer== 
=== 
new==  #
Footer==$ *
(==* +
Footer==+ 1
.==1 2
Where==2 7
(==7 8
x==8 9
=>==: <
x=== >
!===? A
null==B F
)==F G
.==G H
	AsIndexed==H Q
(==Q R
)==R S
.>> 
Select>> 
(>> 
x>> 
=>>> 
x>> 
.>> 
Value>> $
.>>$ %
Render>>% +
(>>+ ,
x>>, -
.>>- .
Index>>. 3
,>>3 4
x>>5 6
.>>6 7
IsFirst>>7 >
,>>> ?
x>>@ A
.>>A B
IsLast>>B H
)>>H I
)>>I J
)>>J K
;>>K L
sectionProperties@@ 
.@@ 
AppendChild@@ )
(@@) *
new@@* -
FooterReference@@. =
{@@> ?
Id@@? A
=@@B C
partId@@D J
,@@J K
Type@@L P
=@@Q R
HeaderFooterValues@@S e
.@@e f
Default@@f m
}@@m n
)@@n o
;@@o p

footerPartBB 
.BB 
FooterBB 
.BB 
SaveBB "
(BB" #
)BB# $
;BB$ %
}CC 	
}DD 
}EE ©'
aC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\ModelConfiguration\TableConfig.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
ModelConfiguration# 5
{ 
internal		 
class		 
TableConfig		 
{

 
public 
TableProperties 
GetTableProperties 1
(1 2
)2 3
{ 	
var 
result 
= 
new 
TableProperties ,
(, -
)- .
;. /
if 
( 
Width 
!= 
null 
) 
{ 
result 
. 
AppendChild "
(" #
Width# (
.( )
ToTableWidthType) 9
<9 :

TableWidth: D
>D E
(E F
)F G
)G H
;H I
} 
result 
. "
TableCellMarginDefault )
=* +
new, /"
TableCellMarginDefault0 F
(F G
)G H
;H I
if 
( 
CellLeftMargin 
!= !
null" &
)& '
{ 
result 
. "
TableCellMarginDefault -
.- .
TableCellLeftMargin. A
=B C
CellLeftMarginD R
.R S
ToTableMarginS `
<` a
TableCellLeftMargina t
>t u
(u v
)v w
;w x
} 
if 
( 
CellTopMargin 
!=  
null! %
)% &
{ 
result 
. "
TableCellMarginDefault -
.- .
	TopMargin. 7
=8 9
CellTopMargin: G
.G H
ToTableWidthTypeH X
<X Y
	TopMarginY b
>b c
(c d
)d e
;e f
} 
if   
(   
CellRightMargin   
!=    "
null  # '
)  ' (
{!! 
result"" 
."" "
TableCellMarginDefault"" -
.""- . 
TableCellRightMargin"". B
=""C D
CellRightMargin## #
.### $
ToTableMargin##$ 1
<##1 2 
TableCellRightMargin##2 F
>##F G
(##G H
)##H I
;##I J
}$$ 
if&& 
(&& 
CellBottomMargin&&  
!=&&! #
null&&$ (
)&&( )
{'' 
result(( 
.(( "
TableCellMarginDefault(( -
.((- .
BottomMargin((. :
=((; <
CellBottomMargin((= M
.((M N
ToTableWidthType((N ^
<((^ _
BottomMargin((_ k
>((k l
(((l m
)((m n
;((n o
})) 
if++ 
(++ 
CellSpacing++ 
!=++ 
null++ #
)++# $
{,, 
result-- 
.-- 
TableCellSpacing-- '
=--( )
new--* -
TableCellSpacing--. >
{.. 
Width// 
=// 
CellSpacing// '
}00 
;00 
}11 
result33 
.33 
TableBorders33 
=33  !
Borders33" )
;33) *
return55 
result55 
;55 
}66 	
public88 
Unit88 
Width88 
{88 
get88 
;88  
set88! $
;88$ %
}88& '
public:: 
List:: 
<:: 
Row:: 
>:: 
Rows:: 
{:: 
get::  #
;::# $
}::% &
=::' (
new::) ,
List::- 1
<::1 2
Row::2 5
>::5 6
(::6 7
)::7 8
;::8 9
public<< 
Unit<< 
CellLeftMargin<< "
{<<# $
get<<% (
;<<( )
set<<* -
;<<- .
}<</ 0
public== 
Unit== 
CellRightMargin== #
{==$ %
get==& )
;==) *
set==+ .
;==. /
}==0 1
public>> 
Unit>> 
CellTopMargin>> !
{>>" #
get>>$ '
;>>' (
set>>) ,
;>>, -
}>>. /
public?? 
Unit?? 
CellBottomMargin?? $
{??% &
get??' *
;??* +
set??, /
;??/ 0
}??1 2
publicAA 
UnitAA 
CellSpacingAA 
{AA  !
getAA" %
;AA% &
setAA' *
;AA* +
}AA, -
publicCC 
TableBordersCC 
BordersCC #
{CC$ %
getCC& )
;CC) *
}CC+ ,
=CC- .
newCC/ 2
TableBordersCC3 ?
(CC? @
)CC@ A
;CCA B
}DD 
}EE ¿	
gC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\ModelConfiguration\TextContentConfig.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
ModelConfiguration# 5
{ 
internal 
class 
TextContentConfig $
{ 
public 
bool 
? 
Bold 
{ 
get 
;  
set! $
;$ %
}& '
public

 
bool

 
?

 
Italic

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
public 
UnderlineValues 
? 
	Underline  )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
string 
Value 
{ 
get !
;! "
set# &
;& '
}( )
public 
Unit 
FontSize 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} 
hC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\ModelConfiguration\WordDocumentConfig.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
ModelConfiguration# 5
{ 
internal 
class 
WordDocumentConfig %
{ 
public		 
List		 
<		 
Section		 
>		 
Sections		 %
{		& '
get		( +
;		+ ,
}		- .
=		/ 0
new		1 4
List		5 9
<		9 :
Section		: A
>		A B
(		B C
)		C D
;		D E
public 
List 
< 
ImageContentItem $
>$ %

ImageMedia& 0
{1 2
get3 6
;6 7
}8 9
=: ;
new< ?
List@ D
<D E
ImageContentItemE U
>U V
(V W
)W X
;X Y
} 
} 
NC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Models\Cell.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Models# )
{ 
public 

class 
Cell 
:		 	
ContentElement		
 
{

 
private 
readonly 

CellConfig #
_config$ +
;+ ,
internal 
override 
OpenXmlElement (
Render) /
(/ 0
int0 3
index4 9
,9 :
bool; ?
isFirst@ G
,G H
boolI M
isLastN T
)T U
{ 	
var 
result 
= 
new 
	TableCell &
(& '
_config' .
.. /
CellProperties/ =
(= >
)> ?
)? @
;@ A
var 
elements 
= 
_config "
." #
Contents# +
.+ ,
Where, 1
(1 2
x2 3
=>4 6
x7 8
!=9 ;
null< @
)@ A
.A B
	AsIndexedB K
(K L
)L M
.M N
ToListN T
(T U
)U V
;V W
if 
( 
! 
elements 
. 
Any 
( 
) 
)  
result! '
.' (
AppendChild( 3
(3 4
new4 7
DocumentFormat8 F
.F G
OpenXmlG N
.N O
WordprocessingO ]
.] ^
	Paragraph^ g
(g h
)h i
)i j
;j k
foreach 
( 
var 
element  
in! #
elements$ ,
), -
{ 
result 
. 
AppendChild "
(" #
element# *
.* +
Value+ 0
.0 1
Render1 7
(7 8
element8 ?
.? @
Index@ E
,E F
elementG N
.N O
IsFirstO V
,V W
elementX _
._ `
IsLast` f
)f g
)g h
;h i
} 
return 
result 
; 
} 	
internal 
Cell 
( 

CellConfig  
config! '
)' (
{ 	
_config 
= 
config 
; 
}   	
}!! 
}"" Ü
YC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Models\CheckboxControl.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Models# )
{ 
public 

class 
CheckboxControl  
: 	
IContent
 
{ 
private 
readonly !
CheckboxControlConfig .
_config/ 6
;6 7
internal

 
CheckboxControl

  
(

  !!
CheckboxControlConfig

! 6
config

7 =
)

= >
{ 	
_config 
= 
config 
; 
} 	
internal 
bool 
	IsChecked 
=>  "
_config# *
?* +
.+ ,
Checked, 3
??4 6
false7 <
;< =
internal 
string 
Label 
=>  
_config! (
?( )
.) *
Label* /
;/ 0
} 
} À
XC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Models\ContentElement.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Models# )
{* +
public 

abstract 
class 
ContentElement (
: 	
IContent
 
{ 
internal 
abstract 
OpenXmlElement (
Render) /
(/ 0
int0 3
index4 9
,9 :
bool; ?
isFirst@ G
,G H
boolI M
isLastN T
)T U
;U V
} 
}		 ñ
]C:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Models\HorizontalAlignment.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Models# )
{ 
public 

enum 
HorizontalAlignment #
{ 
Left 
, 
Center 
, 
Right 
, 
	Justified 
}		 
}

 ã
RC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Models\IContent.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Models# )
{ 
public 

	interface 
IContent 
{ 
} 
} X
VC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Models\ImageContent.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Models# )
{* +
public 

class 
ImageContent 
: 
IContent  (
{ 
private 
readonly 
ImageContentConfig +
_config, 3
;3 4
internal 
ImageContent 
( 
ImageContentConfig 0
config1 7
)7 8
{ 	
_config 
= 
config 
?? 
new  #
ImageContentConfig$ 6
(6 7
)7 8
;8 9
} 	
internal 
ImageContent 
( 
string $
name% )
)) *
{ 	
_config 
= 
new 
ImageContentConfig ,
{- .
Name. 2
=3 4
name5 9
}9 :
;: ;
} 	
public 
Run 
GetRun 
( 
RunProperties '
runProperties( 5
)5 6
{ 	
var 
run 
= 
new 
Run 
{ 
RunProperties ,
=- .
runProperties/ <
.< =
	CloneNode= F
(F G
)G H
}H I
;I J
run!! 
.!! 
RunProperties!! 
.!! 
AppendChild!! )
(!!) *
new!!* -
NoProof!!. 5
(!!5 6
)!!6 7
)!!7 8
;!!8 9
var## 
drawing## 
=## 
new## 
Drawing## %
(##% &
)##& '
;##' (
var$$ 
inline$$ 
=$$ 
new$$ 
Inline$$ #
{%% 
DistanceFromTop&& 
=&&  !
(&&" #
UInt32Value&&# .
)&&. /
$num&&/ 1
,&&1 2
DistanceFromBottom'' "
=''# $
(''% &
UInt32Value''& 1
)''1 2
$num''2 4
,''4 5
DistanceFromLeft((  
=((! "
(((# $
UInt32Value(($ /
)((/ 0
$num((0 2
,((2 3
DistanceFromRight)) !
=))" #
())$ %
UInt32Value))% 0
)))0 1
$num))1 3
}** 
;** 
var,, 3
'nonVisualGraphicFrameDrawingProperties1,, 7
=,,8 9
new,,: =
Wp,,> @
.,,@ A2
&NonVisualGraphicFrameDrawingProperties,,A g
(,,g h
),,h i
;,,i j
var.. 
graphicFrameLocks1.. "
=..# $
new..% (
A..) *
...* +
GraphicFrameLocks..+ <
(..< =
)..= >
{..> ?
NoChangeAspect..@ N
=..O P
true..Q U
}..V W
;..W X
graphicFrameLocks1// 
.// #
AddNamespaceDeclaration// 6
(//6 7
$str//7 :
,//: ;
$str//< s
)//s t
;//t u3
'nonVisualGraphicFrameDrawingProperties111 3
.113 4
Append114 :
(11: ;
graphicFrameLocks111; M
)11M N
;11N O
var44 
graphic144 
=44 
new44 
Graphic44 &
(44& '
)44' (
;44( )
graphic155 
.55 #
AddNamespaceDeclaration55 ,
(55, -
$str55- 0
,550 1
$str552 i
)55i j
;55j k
var77 
graphicData177 
=77 
new77 "
GraphicData77# .
(77. /
)77/ 0
{770 1
Uri772 5
=776 7
$str778 r
}77s t
;77t u
var99 
picture199 
=99 
new99 
DocumentFormat99 -
.99- .
OpenXml99. 5
.995 6
Drawing996 =
.99= >
Pictures99> F
.99F G
Picture99G N
(99N O
)99O P
;99P Q
picture1:: 
.:: #
AddNamespaceDeclaration:: ,
(::, -
$str::- 2
,::2 3
$str::4 n
)::n o
;::o p
var<< '
nonVisualPictureProperties1<< +
=<<, -
new<<. 1
DocumentFormat<<2 @
.<<@ A
OpenXml<<A H
.<<H I
Drawing<<I P
.<<P Q
Pictures<<Q Y
.<<Y Z&
NonVisualPictureProperties<<Z t
(<<t u
)<<u v
;<<v w
var== '
nonVisualDrawingProperties1== +
===, -
new==. 1
DocumentFormat==2 @
.==@ A
OpenXml==A H
.==H I
Drawing==I P
.==P Q
Pictures==Q Y
.==Y Z&
NonVisualDrawingProperties==Z t
(==t u
)==u v
{==v w
Id==x z
==={ |
(==} ~
UInt32Value	==~ 
)
== 
$num
== 
,
== 
Name
== 
=
== 
_config
== 
.
== 
Name
== ¡
}
==¢ £
;
==£ ¤
var>> .
"nonVisualPictureDrawingProperties1>> 2
=>>3 4
new>>5 8
DocumentFormat>>9 G
.>>G H
OpenXml>>H O
.>>O P
Drawing>>P W
.>>W X
Pictures>>X `
.>>` a.
!NonVisualPictureDrawingProperties	>>a 
(
>> 
)
>> 
;
>> '
nonVisualPictureProperties1@@ '
.@@' (
Append@@( .
(@@. /'
nonVisualDrawingProperties1@@/ J
)@@J K
;@@K L'
nonVisualPictureProperties1AA '
.AA' (
AppendAA( .
(AA. /.
"nonVisualPictureDrawingProperties1AA/ Q
)AAQ R
;AAR S
varCC 
	blipFill1CC 
=CC 
newCC 
PicCC  #
.CC# $
BlipFillCC$ ,
(CC, -
)CC- .
;CC. /
varDD 
blip1DD 
=DD 
newDD 
BlipDD  
(DD  !
)DD! "
{DD" #
EmbedDD$ )
=DD* +
_configDD, 3
.DD3 4
NameDD4 8
}DD9 :
;DD: ;
varEE 
blipExtensionList1EE "
=EE# $
newEE% (
BlipExtensionListEE) :
(EE: ;
)EE; <
;EE< =
varGG 
blipExtension1GG 
=GG  
newGG! $
BlipExtensionGG% 2
(GG2 3
)GG3 4
{GG4 5
UriGG6 9
=GG: ;
$strGG< d
}GGe f
;GGf g
varII 
useLocalDpi1II 
=II 
newII "
A14II# &
.II& '
UseLocalDpiII' 2
(II2 3
)II3 4
{II4 5
ValII6 9
=II: ;
falseII< A
}IIB C
;IIC D
useLocalDpi1JJ 
.JJ #
AddNamespaceDeclarationJJ 0
(JJ0 1
$strJJ1 6
,JJ6 7
$strJJ8 o
)JJo p
;JJp q
blipExtension1LL 
.LL 
AppendLL !
(LL! "
useLocalDpi1LL" .
)LL. /
;LL/ 0
blipExtensionList1NN 
.NN 
AppendNN %
(NN% &
blipExtension1NN& 4
)NN4 5
;NN5 6
blip1PP 
.PP 
AppendPP 
(PP 
blipExtensionList1PP +
)PP+ ,
;PP, -
varRR 
stretch1RR 
=RR 
newRR 
StretchRR &
(RR& '
)RR' (
;RR( )
varSS 
fillRectangle1SS 
=SS  
newSS! $
FillRectangleSS% 2
(SS2 3
)SS3 4
;SS4 5
stretch1UU 
.UU 
AppendUU 
(UU 
fillRectangle1UU *
)UU* +
;UU+ ,
	blipFill1WW 
.WW 
AppendWW 
(WW 
blip1WW "
)WW" #
;WW# $
	blipFill1XX 
.XX 
AppendXX 
(XX 
stretch1XX %
)XX% &
;XX& '
varZZ 
shapeProperties1ZZ  
=ZZ! "
newZZ# &
DocumentFormatZZ' 5
.ZZ5 6
OpenXmlZZ6 =
.ZZ= >
DrawingZZ> E
.ZZE F
PicturesZZF N
.ZZN O
ShapePropertiesZZO ^
(ZZ^ _
)ZZ_ `
;ZZ` a
var\\ 
transform2D1\\ 
=\\ 
new\\ "
Transform2D\\# .
(\\. /
)\\/ 0
;\\0 1
var]] 
offset1]] 
=]] 
new]] 
Offset]] $
(]]$ %
)]]% &
{]]& '
X]]( )
=]]* +
$num]], .
,]]. /
Y]]0 1
=]]2 3
$num]]4 6
}]]7 8
;]]8 9
transform2D1__ 
.__ 
Append__ 
(__  
offset1__  '
)__' (
;__( )
varaa 
presetGeometry1aa 
=aa  !
newaa" %
PresetGeometryaa& 4
(aa4 5
)aa5 6
{aa6 7
Presetaa8 >
=aa? @
ShapeTypeValuesaaA P
.aaP Q
	RectangleaaQ Z
}aa[ \
;aa\ ]
varbb 
adjustValueList1bb  
=bb! "
newbb# &
AdjustValueListbb' 6
(bb6 7
)bb7 8
;bb8 9
presetGeometry1dd 
.dd 
Appenddd "
(dd" #
adjustValueList1dd# 3
)dd3 4
;dd4 5
shapeProperties1ff 
.ff 
Appendff #
(ff# $
transform2D1ff$ 0
)ff0 1
;ff1 2
shapeProperties1gg 
.gg 
Appendgg #
(gg# $
presetGeometry1gg$ 3
)gg3 4
;gg4 5
picture1ii 
.ii 
Appendii 
(ii '
nonVisualPictureProperties1ii 7
)ii7 8
;ii8 9
picture1jj 
.jj 
Appendjj 
(jj 
	blipFill1jj %
)jj% &
;jj& '
picture1kk 
.kk 
Appendkk 
(kk 
shapeProperties1kk ,
)kk, -
;kk- .
graphicData1mm 
.mm 
Appendmm 
(mm  
picture1mm  (
)mm( )
;mm) *
graphic1oo 
.oo 
Appendoo 
(oo 
graphicData1oo (
)oo( )
;oo) *
inlineqq 
.qq 
Appendqq 
(qq 3
'nonVisualGraphicFrameDrawingProperties1qq A
)qqA B
;qqB C
inlinerr 
.rr 
Appendrr 
(rr 
graphic1rr "
)rr" #
;rr# $
drawingss 
.ss 
Appendss 
(ss 
inliness !
)ss! "
;ss" #
runtt 
.tt 
AppendChildtt 
(tt 
drawingtt #
)tt# $
;tt$ %
returnuu 
runuu 
;uu 
}vv 	
}ww 
}xx á
ZC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Models\ImageContentItem.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Models# )
{* +
internal 
class 
ImageContentItem #
{ 
public 
string 
ContentType !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
byte 
[ 
] 
Content 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} Ö
QC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Models\Indexed.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Models# )
{ 
public 

class 
Indexed 
< 
T 
> 
{ 
public 
static 
implicit 
operator '
T( )
() *
Indexed* 1
<1 2
T2 3
>3 4
value5 :
): ;
{ 	
return 
value 
. 
Value 
; 
} 	
internal

 
Indexed

 
(

 
int

 
index

 "
,

" #
int

$ '
length

( .
,

. /
T

0 1
value

2 7
)

7 8
{ 	
Index 
= 
index 
; 
Total 
= 
length 
; 
IsFirst 
= 
index 
== 
$num  
;  !
IsLast 
= 
index 
== 
length $
-% &
$num' (
;( )
Value 
= 
value 
; 
} 	
public 
int 
Index 
{ 
get 
; 
}  !
public 
int 
Total 
{ 
get 
; 
}  !
public 
bool 
IsFirst 
{ 
get !
;! "
}# $
public 
bool 
IsLast 
{ 
get  
;  !
}" #
public 
T 
Value 
{ 
get 
; 
} 
} 
} ¨
YC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Models\PageOrientation.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Models# )
{ 
public 

enum 
PageOrientation 
{ 
Portrait 
, 
	Landscape 
} 
} ¶
RC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Models\PageSize.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Models# )
{ 
public 

enum 
PageSize 
: 	
ushort
 
{ 
Letter 
= 
$num 
, 
A5 

= 
$num 
, 
A4 

= 
$num 
}		 
}

 ¤
SC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Models\Paragraph.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Models# )
{ 
public 

class 
	Paragraph 
: 	
ContentElement
 
{ 
private		 
readonly		 
ParagraphConfig		 (
_config		) 0
;		0 1
internal 
	Paragraph 
( 
ParagraphConfig *
config+ 1
)1 2
{ 	
_config 
= 
config 
; 
} 	
internal 
override 
OpenXmlElement (
Render) /
(/ 0
int0 3
index4 9
,9 :
bool; ?
isFirst@ G
,G H
boolI M
isLastN T
)T U
{ 	
var 
result 
= 
new 
DocumentFormat +
.+ ,
OpenXml, 3
.3 4
Wordprocessing4 B
.B C
	ParagraphC L
{ 
ParagraphProperties #
=$ %
_config& -
.- ."
GetParagraphProperties. D
(D E
)E F
} 
; 
foreach 
( 
var 
run 
in 
_config  '
.' (
GetRuns( /
(/ 0
)0 1
)1 2
{ 
result 
. 
AppendChild "
(" #
run# &
)& '
;' (
} 
return 
result 
; 
} 	
} 
} Ô
_C:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Models\PredefinedPageMargins.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Models# )
{ 
public 

enum !
PredefinedPageMargins %
{ 
Normal 
, 
Narrow 
, 
Moderate 
} 
}		 
MC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Models\Row.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Models# )
{ 
public 

class 
Row 
: 	
ContentElement
 
{		 
private

 
readonly

 
	RowConfig

 "
_config

# *
;

* +
internal 
override 
OpenXmlElement (
Render) /
(/ 0
int0 3
index4 9
,9 :
bool; ?
isFirst@ G
,G H
boolI M
isLastN T
)T U
{ 	
var 
result 
= 
new 
TableRow %
(% &
_config& -
.- .
GetRowProperties. >
(> ?
)? @
)@ A
;A B
foreach 
( 
var 
cell 
in  
_config! (
.( )
Cells) .
.. /
	AsIndexed/ 8
(8 9
)9 :
): ;
{ 
result 
. 
AppendChild "
(" #
cell# '
.' (
Value( -
.- .
Render. 4
(4 5
cell5 9
.9 :
Index: ?
,? @
cellA E
.E F
IsFirstF M
,M N
cellO S
.S T
IsLastT Z
)Z [
)[ \
;\ ]
} 
return 
result 
; 
} 	
internal 
Row 
( 
	RowConfig 
config %
)% &
{ 	
_config 
= 
config 
; 
} 	
} 
} Ü
QC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Models\Section.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Models# )
{ 
public 

class 
Section 
{		 
private

 
readonly

 
SectionConfig

 &
_config

' .
;

. /
internal 
Body 
Render 
( 
int  
index! &
,& '
bool( ,
isFirst- 4
,4 5
bool6 :
isLast; A
,A B
MainDocumentPartC S
mainPartT \
)\ ]
{ 	
var 
result 
= 
new 
Body !
(! "
_config" )
.) *
SectionProperties* ;
(; <
mainPart< D
)D E
)E F
;F G
foreach 
( 
var 
element  
in! #
_config$ +
.+ ,
Contents, 4
.4 5
Where5 :
(: ;
x; <
=>= ?
x@ A
!=B D
nullE I
)I J
.J K
	AsIndexedK T
(T U
)U V
)V W
{ 
result 
. 
AppendChild "
(" #
element# *
.* +
Value+ 0
.0 1
Render1 7
(7 8
element8 ?
.? @
Index@ E
,E F
elementG N
.N O
IsFirstO V
,V W
elementX _
._ `
IsLast` f
)f g
)g h
;h i
} 
return 
result 
; 
} 	
internal 
Section 
( 
SectionConfig &
config' -
)- .
{ 	
_config 
= 
config 
; 
} 	
} 
} 
OC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Models\Table.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Models# )
{ 
public 

class 
Table 
: 	
ContentElement
 
{ 
private		 
readonly		 
TableConfig		 $
_config		% ,
;		, -
internal 
override 
OpenXmlElement (
Render) /
(/ 0
int0 3
index4 9
,9 :
bool; ?
isFirst@ G
,G H
boolI M
isLastN T
)T U
{ 	
var 
result 
= 
new 
DocumentFormat +
.+ ,
OpenXml, 3
.3 4
Wordprocessing4 B
.B C
TableC H
(H I
_configI P
.P Q
GetTablePropertiesQ c
(c d
)d e
)e f
;f g
foreach 
( 
var 
row 
in 
_config  '
.' (
Rows( ,
., -
	AsIndexed- 6
(6 7
)7 8
)8 9
{ 
result 
. 
AppendChild "
(" #
row# &
.& '
Value' ,
., -
Render- 3
(3 4
row4 7
.7 8
Index8 =
,= >
row? B
.B C
IsFirstC J
,J K
rowL O
.O P
IsLastP V
)V W
)W X
;X Y
} 
return 
result 
; 
} 	
internal 
Table 
( 
TableConfig "
config# )
)) *
{ 	
_config 
= 
config 
; 
} 	
} 
} î/
UC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Models\TextContent.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Models# )
{ 
public 

class 
TextContent 
: 	
IContent
 
{ 
private 
readonly 
TextContentConfig *
_config+ 2
;2 3
public 
static 
implicit 
operator '
string( .
(. /
TextContent/ :
content; B
)B C
{ 	
return 
content 
? 
. 
_config #
?# $
.$ %
Value% *
;* +
} 	
public 
Run 
GetRun 
( 
RunProperties '
runProperties( 5
)5 6
{ 	
var 
run 
= 
new 
Run 
{ 
RunProperties ,
=- .
runProperties/ <
.< =
	CloneNode= F
(F G
)G H
}H I
;I J
if 
( 
_config 
. 
Bold 
. 
HasValue %
)% &
{ 
run 
. 
RunProperties !
.! "
Bold" &
=' (
new) ,
Bold- 1
{2 3
Val3 6
=7 8

OnOffValue9 C
.C D
FromBooleanD O
(O P
_configP W
.W X
BoldX \
.\ ]
Value] b
)b c
}c d
;d e
} 
if   
(   
_config   
.   
Italic   
.   
HasValue   '
)  ' (
{!! 
run"" 
."" 
RunProperties"" !
.""! "
Italic""" (
="") *
new""+ .
Italic""/ 5
{""6 7
Val""7 :
=""; <

OnOffValue""= G
.""G H
FromBoolean""H S
(""S T
_config""T [
.""[ \
Italic""\ b
.""b c
Value""c h
)""h i
}""i j
;""j k
}## 
if%% 
(%% 
_config%% 
.%% 
	Underline%% !
.%%! "
HasValue%%" *
)%%* +
{&& 
run'' 
.'' 
RunProperties'' !
.''! "
	Underline''" +
='', -
new''. 1
	Underline''2 ;
{''< =
Val''= @
=''A B
_config''C J
.''J K
	Underline''K T
}''T U
;''U V
}(( 
if** 
(** 
_config** 
.** 
FontSize**  
!=**! #
null**$ (
)**( )
{++ 
run,, 
.,, 
RunProperties,, !
.,,! "
FontSize,," *
=,,+ ,
new,,- 0
FontSize,,1 9
{,,9 :
Val,,: =
=,,> ?
_config,,@ G
.,,G H
FontSize,,H P
},,P Q
;,,Q R
}-- 
if// 
(// 
!// 
string// 
.// 
IsNullOrEmpty// %
(//% &
this//& *
)//* +
)//+ ,
{00 
var11 
lines11 
=11 
(11 
(11 
string11 $
)11$ %
this11& *
)11* +
.11+ ,
Split11, 1
(111 2
new112 5
[115 6
]116 7
{118 9
$str119 ?
,11? @
$str11A E
}11E F
,11F G
StringSplitOptions11H Z
.11Z [
None11[ _
)11_ `
.11` a
	AsIndexed11a j
(11j k
)11k l
;11l m
foreach33 
(33 
var33 
line33 !
in33" $
lines33% *
)33* +
{44 
if55 
(55 
!55 
line55 
.55 
IsFirst55 %
)55% &
{66 
run77 
.77 
AppendChild77 '
(77' (
new77( +
Break77, 1
(771 2
)772 3
)773 4
;774 5
}88 
if:: 
(:: 
!:: 
string:: 
.::  
IsNullOrEmpty::  -
(::- .
line::. 2
.::2 3
Value::3 8
)::8 9
)::9 :
{;; 
run<< 
.<< 
AppendChild<< '
(<<' (
new<<( +
Text<<, 0
(<<0 1
line<<1 5
)<<5 6
{<<7 8
Space<<8 =
=<<> ?%
SpaceProcessingModeValues<<@ Y
.<<Y Z
Preserve<<Z b
}<<b c
)<<c d
;<<d e
}== 
}>> 
}?? 
ifAA 
(AA 
_configAA 
.AA 
ValueAA 
==AA  
nullAA! %
)AA% &
{BB 
runCC 
.CC 
AppendChildCC 
(CC  
newCC  #
BreakCC$ )
(CC) *
)CC* +
)CC+ ,
;CC, -
}DD 
returnFF 
runFF 
;FF 
}GG 	
internalII 
TextContentII 
(II 
TextContentConfigII .
configII/ 5
)II5 6
{JJ 	
_configKK 
=KK 
configKK 
??KK 
newKK  #
TextContentConfigKK$ 5
(KK5 6
)KK6 7
;KK7 8
}LL 	
internalNN 
TextContentNN 
(NN 
stringNN #
textNN$ (
)NN( )
{OO 	
_configPP 
=PP 
newPP 
TextContentConfigPP +
{PP, -
ValuePP- 2
=PP3 4
textPP5 9
}PP9 :
;PP: ;
}QQ 	
}RR 
}SS @
NC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Models\Unit.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Models# )
{ 
public 

class 
Unit 
{		 
public

 
static

 
implicit

 
operator

 '
Unit

( ,
(

, -
double

- 3
value

4 9
)

9 :
{ 	
return 
new 
Unit 
{ 
Value "
=# $
value% *
}* +
;+ ,
} 	
public 
static 
implicit 
operator '
string( .
(. /
Unit/ 3
value4 9
)9 :
{ 	
return 
value 
? 
. 
ToString "
(" #
)# $
;$ %
} 	
public 
static 
implicit 
operator '
StringValue( 3
(3 4
Unit4 8
value9 >
)> ?
{ 	
return 
new 
StringValue "
(" #
value# (
.( )
ToString) 1
(1 2
)2 3
)3 4
;4 5
} 	
public 
override 
string 
ToString '
(' (
)( )
{ 	
double 
result 
; 
var 
unit 
= 
string 
. 
Empty #
;# $
switch 
( 
Type 
) 
{ 
case   
UnitType   
.   
pt    
:    !
result!! 
=!! 
Value!! "
*!!# $
$num!!% (
;!!( )
unit"" 
="" 
$str"" 
;""  
break## 
;## 
case$$ 
UnitType$$ 
.$$ 
pct$$ !
:$$! "
result%% 
=%% 
Value%% "
*%%# $
$num%%% (
;%%( )
unit&& 
=&& 
$str&&  
;&&  !
break'' 
;'' 
case(( 
UnitType(( 
.(( 
inch(( "
:((" #
result)) 
=)) 
Value)) "
*))# $
$num))% *
;))* +
unit** 
=** 
$str** 
;**  
break++ 
;++ 
case,, 
UnitType,, 
.,, 
mm,,  
:,,  !
result-- 
=-- 
Value-- "
*--# $
$num--% *
/--+ ,
$num--- 2
;--2 3
unit.. 
=.. 
$str.. 
;..  
break// 
;// 
case00 
UnitType00 
.00 
cm00  
:00  !
result11 
=11 
Value11 "
*11# $
$num11% *
/11+ ,
$num11- 2
;112 3
unit22 
=22 
$str22 
;22  
break33 
;33 
default44 
:44 
throw55 
new55 '
ArgumentOutOfRangeException55 9
(559 :
)55: ;
;55; <
}66 
return88 
$"88 
{88 
Value88 
}88 
{88 
unit88 !
}88! "
"88" #
;88# $
}99 	
internalVV 
doubleVV 
ToDxaVV 
(VV 
)VV 
{WW 	
doubleXX 
resultXX 
;XX 
switchZZ 
(ZZ 
TypeZZ 
)ZZ 
{[[ 
case\\ 
UnitType\\ 
.\\ 
pt\\  
:\\  !
result]] 
=]] 
Value]] "
*]]# $
$num]]% (
;]]( )
break^^ 
;^^ 
case__ 
UnitType__ 
.__ 
pct__ !
:__! "
result`` 
=`` 
Value`` "
*``# $
$num``% (
;``( )
breakaa 
;aa 
casebb 
UnitTypebb 
.bb 
inchbb "
:bb" #
resultcc 
=cc 
Valuecc "
*cc# $
$numcc% *
;cc* +
breakdd 
;dd 
caseee 
UnitTypeee 
.ee 
mmee  
:ee  !
resultff 
=ff 
Valueff "
*ff# $
$numff% *
/ff+ ,
$numff- 2
;ff2 3
breakgg 
;gg 
casehh 
UnitTypehh 
.hh 
cmhh  
:hh  !
resultii 
=ii 
Valueii "
*ii# $
$numii% *
/ii+ ,
$numii- 2
;ii2 3
breakjj 
;jj 
defaultkk 
:kk 
throwll 
newll '
ArgumentOutOfRangeExceptionll 9
(ll9 :
)ll: ;
;ll; <
}mm 
returnoo 
resultoo 
;oo 
}pp 	
privaterr 
Unitrr 
(rr 
)rr 
{ss 	
}tt 	
publicvv 
Unitvv 
(vv 
doublevv 
valuevv  
,vv  !
UnitTypevv" *
typevv+ /
=vv0 1
UnitTypevv2 :
.vv: ;
ptvv; =
)vv= >
{ww 	
Valuexx 
=xx 
valuexx 
;xx 
Typeyy 
=yy 
typeyy 
;yy 
}zz 	
public|| 
double|| 
Value|| 
{|| 
get|| !
;||! "
set||# &
;||& '
}||( )
public}} 
UnitType}} 
Type}} 
{}} 
get}} "
;}}" #
set}}$ '
;}}' (
}}}) *
=}}+ ,
UnitType}}- 5
.}}5 6
pt}}6 8
;}}8 9
internal 
T 
ToTableWidthType #
<# $
T$ %
>% &
(& '
)' (
where
 
T
 
:
 
TableWidthType
 $
,
$ %
new
& )
(
) *
)
* +
{
 	
var
 
result
 
=
 
new
 
T
 
{
 
Width
 
=
 
ToDxa
 
(
 
)
 
.
  
ToString
  (
(
( )
CultureInfo
) 4
.
4 5
InvariantCulture
5 E
)
E F
,
F G
Type
 
=
 
Type
 
==
 
UnitType
 '
.
' (
pct
( +
?
, -"
TableWidthUnitValues
. B
.
B C
Pct
C F
:
G H"
TableWidthUnitValues
I ]
.
] ^
Dxa
^ a
}
 
;
 
return
 
result
 
;
 
}
 	
internal
 
T
 
ToTableMargin
  
<
  !
T
! "
>
" #
(
# $
)
$ %
where
 
T
 
:
 "
TableWidthDxaNilType
 *
,
* +
new
, /
(
/ 0
)
0 1
{
 	
var
 
result
 
=
 
new
 
T
 
{
 
Width
 
=
 
Convert
 
.
  
ToInt16
  '
(
' (
ToDxa
( -
(
- .
)
. /
)
/ 0
,
0 1
Type
 
=
 
TableWidthValues
 '
.
' (
Dxa
( +
}
 
;
 
return
 
result
 
;
 
}
 	
}
 
} ï
RC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\Models\UnitType.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
." #
Models# )
{* +
public 

enum 
UnitType 
{ 
pt 

,
 
pct 
, 
inch 
, 
mm 

,
 
cm 

}		 
}

 ËÐ
OC:\work\github\frontforge.opendocx\src\Frontforge.OpenDocx.Core\WordDocument.cs
	namespace 	

Frontforge
 
. 
OpenDocx 
. 
Core "
{ 
public 

abstract 
class 
WordDocument &
{ 
private 
readonly 
WordDocumentConfig +
_config, 3
=4 5
new6 9
WordDocumentConfig: L
(L M
)M N
;N O
public 
void 
Dispose 
( 
) 
{ 	
Dispose 
( 
true 
) 
; 
GC 
. 
SuppressFinalize 
(  
this  $
)$ %
;% &
} 	
	protected 
virtual 
void 
Dispose &
(& '
bool' +
	disposing, 5
)5 6
{ 	
if 
( 
	disposing 
) 
{ 
} 
} 	
	protected 
SectionBuilder  
Section! (
(( )
)) *
{ 	
return   
new   
SectionBuilder   %
(  % &
)  & '
;  ' (
}!! 	
	protected## 
void## 
AddImageMedia## $
(##$ %
byte##% )
[##) *
]##* +
content##, 3
,##3 4
string##5 ;
contentType##< G
,##G H
string##I O
name##P T
)##T U
{$$ 	
_config%% 
.%% 

ImageMedia%% 
.%% 
Add%% "
(%%" #
new%%# &
ImageContentItem%%' 7
{&& 
Name'' 
='' 
name'' 
,'' 
Content'' $
=''% &
content''' .
,''. /
ContentType''0 ;
=''< =
contentType''> I
}(( 
)(( 
;(( 
})) 	
	protected,, 
ParagraphBuilder,, "
Par,,# &
(,,& '
),,' (
{-- 	
return.. 
new.. 
ParagraphBuilder.. '
(..' (
)..( )
;..) *
}// 	
	protected11 
ParagraphBuilder11 "
Par11# &
(11& '
string11' -
text11. 2
)112 3
{22 	
return33 
new33 
ParagraphBuilder33 '
(33' (
)33( )
.33) *
Add33* -
(33- .
text33. 2
)332 3
;333 4
}44 	
	protected66 
TextContentBuilder66 $
Text66% )
(66) *
string66* 0
text661 5
)665 6
{77 	
return88 
new88 
TextContentBuilder88 )
(88) *
text88* .
)88. /
;88/ 0
}99 	
	protected;; 
TextContentBuilder;; $
Break;;% *
(;;* +
);;+ ,
{<< 	
return== 
new== 
TextContentBuilder== )
(==) *
null==* .
)==. /
;==/ 0
}>> 	
	protected@@ 
ImageContentBuilder@@ %
Image@@& +
(@@+ ,
string@@, 2
name@@3 7
)@@7 8
{AA 	
returnBB 
newBB 
ImageContentBuilderBB *
(BB* +
nameBB+ /
)BB/ 0
;BB0 1
}CC 	
	protectedEE 
ParagraphBuilderEE "
ParEE# &
(EE& '
stringEE' -
textEE. 2
,EE2 3
HorizontalAlignmentEE4 G
	alignmentEEH Q
)EEQ R
{FF 	
returnGG 
newGG 
ParagraphBuilderGG '
(GG' (
)GG( )
.GG) *
	AlignmentGG* 3
(GG3 4
	alignmentGG4 =
)GG= >
.GG> ?
AddGG? B
(GGB C
textGGC G
)GGG H
;GGH I
}HH 	
	protectedJJ 
ParagraphBuilderJJ "
ParJJ# &
(JJ& '
paramsJJ' -
ContentElementJJ. <
[JJ< =
]JJ= >
contentsJJ? G
)JJG H
{KK 	
returnLL 
newLL 
ParagraphBuilderLL '
(LL' (
)LL( )
.LL) *
AddLL* -
(LL- .
contentsLL. 6
)LL6 7
;LL7 8
}MM 	
	protectedOO 
TableBuilderOO 
TableOO $
(OO$ %
paramsOO% +
RowOO, /
[OO/ 0
]OO0 1
rowsOO2 6
)OO6 7
{PP 	
returnQQ 
newQQ 
TableBuilderQQ #
(QQ# $
)QQ$ %
.QQ% &
AddQQ& )
(QQ) *
rowsQQ* .
)QQ. /
;QQ/ 0
}RR 	
	protectedTT 

RowBuilderTT 
RowTT  
(TT  !
paramsTT! '
CellTT( ,
[TT, -
]TT- .
cellsTT/ 4
)TT4 5
{UU 	
returnVV 
newVV 

RowBuilderVV !
(VV! "
)VV" #
.VV# $
AddVV$ '
(VV' (
cellsVV( -
)VV- .
;VV. /
}WW 	
	protectedYY 
CellBuilderYY 
CellYY "
(YY" #
)YY# $
{ZZ 	
return[[ 
new[[ 
CellBuilder[[ "
([[" #
)[[# $
;[[$ %
}\\ 	
	protected^^ 
CellBuilder^^ 
Cell^^ "
(^^" #
params^^# )
ContentElement^^* 8
[^^8 9
]^^9 :
contents^^; C
)^^C D
{__ 	
return`` 
new`` 
CellBuilder`` "
(``" #
)``# $
.``$ %
Add``% (
(``( )
contents``) 1
)``1 2
;``2 3
}aa 	
	protectedcc 
CellBuildercc 
Cellcc "
(cc" #
stringcc# )
textcc* .
,cc. /
boolcc0 4
boldcc5 9
=cc: ;
falsecc< A
)ccA B
{dd 	
returnee 
newee 
CellBuilderee "
(ee" #
)ee# $
.ee$ %
Addee% (
(ee( )
Paree) ,
(ee, -
textee- 1
)ee1 2
.ee2 3
Boldee3 7
(ee7 8
boldee8 <
)ee< =
.ee= >
SpacingAfteree> J
(eeJ K
$numeeK L
)eeL M
)eeM N
;eeN O
}ff 	
	protectedhh 
CellBuilderhh 
Cellhh "
(hh" #
stringhh# )
texthh* .
,hh. /
HorizontalAlignmenthh0 C
	alignmenthhD M
,hhM N
boolhhO S
boldhhT X
=hhY Z
falsehh[ `
)hh` a
{ii 	
returnjj 
newjj 
CellBuilderjj "
(jj" #
)jj# $
.jj$ %
Addjj% (
(jj( )
Parjj) ,
(jj, -
textjj- 1
,jj1 2
	alignmentjj3 <
)jj< =
.jj= >
Boldjj> B
(jjB C
boldjjC G
)jjG H
.jjH I
SpacingAfterjjI U
(jjU V
$numjjV W
)jjW X
)jjX Y
;jjY Z
}kk 	
	protectedmm 
CheckboxBuildermm !
Checkboxmm" *
(mm* +
stringmm+ 1
textmm2 6
)mm6 7
{nn 	
returnoo 
newoo 
CheckboxBuilderoo &
(oo& '
)oo' (
.oo( )
Labeloo) .
(oo. /
textoo/ 3
)oo3 4
;oo4 5
}pp 	
	protectedrr 
WordDocumentrr 

AddSectionrr )
(rr) *
Sectionrr* 1
pagerr2 6
)rr6 7
{ss 	
returntt 
thistt 
.tt 
Chaintt 
(tt 
ptt 
=>tt  "
ptt# $
.tt$ %
_configtt% ,
.tt, -
Sectionstt- 5
.tt5 6
Addtt6 9
(tt9 :
pagett: >
)tt> ?
)tt? @
;tt@ A
}uu 	
publicww 
voidww 
Saveww 
(ww 
Streamww 
streamww  &
)ww& '
{xx 	
ifyy 
(yy 
streamyy 
==yy 
nullyy 
)yy 
{zz 
throw{{ 
new{{ !
ArgumentNullException{{ /
({{/ 0
nameof{{0 6
({{6 7
stream{{7 =
){{= >
){{> ?
;{{? @
}|| 
using~~ 
var~~ 
document~~ 
=~~  "
WordprocessingDocument~~! 7
.~~7 8
Create~~8 >
(~~> ?
stream~~? E
,~~E F&
WordprocessingDocumentType~~G a
.~~a b
Document~~b j
)~~j k
;~~k l
var 
mainPart 
= 
document #
.# $
AddMainDocumentPart$ 7
(7 8
)8 9
;9 :
AddSettings
 
(
 
mainPart
  
)
  !
;
! " 
AddNumberingStyles
 
(
 
mainPart
 '
)
' (
;
( )
	AddStyles
 
(
 
mainPart
 
)
 
;
  
	AddImages
 
(
 
mainPart
 
)
 
;
  
foreach
 
(
 
var
 
section
  
in
! #
_config
$ +
.
+ ,
Sections
, 4
.
4 5
Where
5 :
(
: ;
x
; <
=>
= ?
x
@ A
!=
B D
null
E I
)
I J
.
J K
	AsIndexed
K T
(
T U
)
U V
)
V W
{
 
var
 
sectionPart
 
=
  !
section
" )
.
) *
Value
* /
.
/ 0
Render
0 6
(
6 7
section
7 >
.
> ?
Index
? D
,
D E
section
F M
.
M N
IsFirst
N U
,
U V
section
W ^
.
^ _
IsLast
_ e
,
e f
mainPart
g o
)
o p
;
p q
new
 
Document
 
(
 
sectionPart
 (
)
( )
.
) *
Save
* .
(
. /
mainPart
/ 7
)
7 8
;
8 9
}
 
document
 
.
 
Save
 
(
 
)
 
;
 
}
 	
private
 
void
 
	AddImages
 
(
 
MainDocumentPart
 /
mainPart
0 8
)
8 9
{
 	
if
 
(
 
!
 
_config
 
.
 

ImageMedia
 #
.
# $
Any
$ '
(
' (
)
( )
)
) *
return
+ 1
;
1 2
foreach
 
(
 
var
 
imageContent
 %
in
& (
_config
) 0
.
0 1

ImageMedia
1 ;
)
; <
{
 
var
 
	imagePart
 
=
 
mainPart
  (
.
( )

AddNewPart
) 3
<
3 4
	ImagePart
4 =
>
= >
(
> ?
imageContent
? K
.
K L
ContentType
L W
,
W X
imageContent
Y e
.
e f
Name
f j
)
j k
;
k l
using
 
var
 
ms
 
=
 
new
 "
MemoryStream
# /
(
/ 0
imageContent
0 <
.
< =
Content
= D
)
D E
;
E F
	imagePart
 
.
 
FeedData
 "
(
" #
ms
# %
)
% &
;
& '
ms
 
.
 
Close
 
(
 
)
 
;
 
}
 
}
 	
private
 
static
 
void
 
AddSettings
 '
(
' (
MainDocumentPart
( 8
mainPart
9 A
)
A B
{
 	
var
 
settingsPart
 
=
 
mainPart
 '
.
' ("
DocumentSettingsPart
( <
;
< =
if
 
(
 
settingsPart
 
==
 
null
  $
)
$ %
{
   
settingsPart
¡¡ 
=
¡¡ 
mainPart
¡¡ '
.
¡¡' (

AddNewPart
¡¡( 2
<
¡¡2 3"
DocumentSettingsPart
¡¡3 G
>
¡¡G H
(
¡¡H I
)
¡¡I J
;
¡¡J K
settingsPart
££ 
.
££ 
Settings
££ %
=
££& '
new
££( +
Settings
££, 4
(
££4 5
new
¤¤ 
Compatibility
¤¤ %
(
¤¤% &
new
¥¥ "
CompatibilitySetting
¥¥ 0
{
¦¦ 
Name
§§  
=
§§! "
new
§§# &
	EnumValue
§§' 0
<
§§0 1%
CompatSettingNameValues
§§1 H
>
§§H I
(
¨¨  !%
CompatSettingNameValues
¨¨! 8
.
¨¨8 9
CompatibilityMode
¨¨9 J
)
¨¨J K
,
¨¨K L
Val
©© 
=
©©  !
new
©©" %
StringValue
©©& 1
(
©©1 2
$str
©©2 6
)
©©6 7
,
©©7 8
Uri
ªª 
=
ªª  !
new
ªª" %
StringValue
ªª& 1
(
ªª1 2
$str
ªª2 \
)
ªª\ ]
}
«« 
)
¬¬ 
,
¬¬ 
new
­­ 
DefaultTabStop
­­ &
{
­­' (
Val
­­( +
=
­­, -
Convert
­­. 5
.
­­5 6
ToInt16
­­6 =
(
­­= >
new
­­> A
Unit
­­B F
(
­­F G
$num
­­G L
,
­­L M
UnitType
­­N V
.
­­V W
inch
­­W [
)
­­[ \
.
­­\ ]
ToDxa
­­] b
(
­­b c
)
­­c d
)
­­d e
}
­­e f
)
®® 
;
®® 
}
¯¯ 
settingsPart
±± 
.
±± 
Settings
±± !
.
±±! "
Save
±±" &
(
±±& '
)
±±' (
;
±±( )
}
²² 	
private
´´ 
static
´´ 
void
´´  
AddNumberingStyles
´´ .
(
´´. /
MainDocumentPart
´´/ ?
mainPart
´´@ H
)
´´H I
{
µµ 	
var
¶¶ 
part
¶¶ 
=
¶¶ 
mainPart
¶¶ 
.
¶¶  &
NumberingDefinitionsPart
¶¶  8
;
¶¶8 9
if
¸¸ 
(
¸¸ 
part
¸¸ 
==
¸¸ 
null
¸¸ 
)
¸¸ 
{
¹¹ 
part
ºº 
=
ºº 
mainPart
ºº 
.
ºº  

AddNewPart
ºº  *
<
ºº* +&
NumberingDefinitionsPart
ºº+ C
>
ººC D
(
ººD E
)
ººE F
;
ººF G
new
»» 
	Numbering
»» 
(
»» 
)
»» 
.
»»  
Save
»»  $
(
»»$ %
part
»»% )
)
»») *
;
»»* +
}
¼¼ 
var
¾¾ 
abstractNumberId
¾¾  
=
¾¾! "
(
¿¿ 
part
¿¿ 
.
¿¿ 
	Numbering
¿¿ 
.
¿¿  
Elements
¿¿  (
<
¿¿( )
AbstractNum
¿¿) 4
>
¿¿4 5
(
¿¿5 6
)
¿¿6 7
.
¿¿7 8
Max
¿¿8 ;
(
¿¿; <
x
¿¿< =
=>
¿¿> @
x
¿¿A B
.
¿¿B C
AbstractNumberId
¿¿C S
?
¿¿S T
.
¿¿T U
Value
¿¿U Z
)
¿¿Z [
??
¿¿\ ^
$num
¿¿_ `
)
¿¿` a
+
¿¿b c
$num
¿¿d e
;
¿¿e f
var
ÁÁ 
abstractLevel
ÁÁ 
=
ÁÁ 
new
ÁÁ  #
Level
ÁÁ$ )
(
ÁÁ) *
new
ÂÂ !
StartNumberingValue
ÂÂ '
{
ÂÂ( )
Val
ÂÂ) ,
=
ÂÂ- .
$num
ÂÂ/ 0
}
ÂÂ0 1
,
ÂÂ1 2
new
ÃÃ 
NumberingFormat
ÃÃ #
{
ÃÃ$ %
Val
ÃÃ% (
=
ÃÃ) * 
NumberFormatValues
ÃÃ+ =
.
ÃÃ= >
Bullet
ÃÃ> D
}
ÃÃD E
,
ÃÃE F
new
ÄÄ 
	LevelText
ÄÄ 
{
ÄÄ 
Val
ÄÄ "
=
ÄÄ# $
$str
ÄÄ% (
}
ÄÄ( )
,
ÄÄ) *
new
ÅÅ  
LevelJustification
ÅÅ &
{
ÅÅ' (
Val
ÅÅ( +
=
ÅÅ, -&
LevelJustificationValues
ÅÅ. F
.
ÅÅF G
Left
ÅÅG K
}
ÅÅK L
,
ÅÅL M
new
ÆÆ !
ParagraphProperties
ÆÆ '
{
ÇÇ 
Indentation
ÈÈ 
=
ÈÈ  !
new
ÈÈ" %
Indentation
ÈÈ& 1
{
ÉÉ 
Left
ÊÊ 
=
ÊÊ 
new
ÊÊ "
Unit
ÊÊ# '
(
ÊÊ' (
$num
ÊÊ( ,
,
ÊÊ, -
UnitType
ÊÊ. 6
.
ÊÊ6 7
inch
ÊÊ7 ;
)
ÊÊ; <
,
ÊÊ< =
Hanging
ËË 
=
ËË  !
new
ËË" %
Unit
ËË& *
(
ËË* +
$num
ËË+ 0
,
ËË0 1
UnitType
ËË2 :
.
ËË: ;
inch
ËË; ?
)
ËË? @
}
ÌÌ 
}
ÍÍ 
,
ÍÍ 
new
ÎÎ (
ParagraphMarkRunProperties
ÎÎ .
(
ÎÎ. /
new
ÏÏ 
RunFonts
ÏÏ  
{
ÐÐ 
Ascii
ÑÑ 
=
ÑÑ 
$str
ÑÑ  (
,
ÑÑ( )
HighAnsi
ÒÒ  
=
ÒÒ! "
$str
ÒÒ# +
,
ÒÒ+ ,
Hint
ÓÓ 
=
ÓÓ  
FontTypeHintValues
ÓÓ 1
.
ÓÓ1 2
Default
ÓÓ2 9
}
ÔÔ 
)
ÕÕ 
)
ÖÖ 
{
×× 

LevelIndex
ØØ 
=
ØØ 
$num
ØØ 
}
ÙÙ 
;
ÙÙ 
var
ÛÛ 
abstractNum1
ÛÛ 
=
ÛÛ 
new
ÛÛ "
AbstractNum
ÛÛ# .
(
ÛÛ. /
abstractLevel
ÛÛ/ <
)
ÛÛ< =
{
ÜÜ 
AbstractNumberId
ÝÝ  
=
ÝÝ! "
abstractNumberId
ÝÝ# 3
,
ÝÝ3 4
MultiLevelType
ÞÞ 
=
ÞÞ  
new
ÞÞ! $
MultiLevelType
ÞÞ% 3
{
ÞÞ4 5
Val
ÞÞ5 8
=
ÞÞ9 :
MultiLevelValues
ÞÞ; K
.
ÞÞK L
HybridMultilevel
ÞÞL \
}
ÞÞ\ ]
}
ßß 
;
ßß 
part
áá 
.
áá 
	Numbering
áá 
.
áá 
AppendChild
áá &
(
áá& '
abstractNum1
áá' 3
)
áá3 4
;
áá4 5
part
ãã 
.
ãã 
	Numbering
ãã 
.
ãã 
AppendChild
ãã &
(
ãã& '
new
ää 
NumberingInstance
ää %
{
åå 
NumberID
ææ 
=
ææ 
abstractNumberId
ææ /
,
ææ/ 0
AbstractNumId
çç !
=
çç" #
new
çç$ '
AbstractNumId
çç( 5
{
èè 
Val
éé 
=
éé 
abstractNumberId
éé .
}
êê 
}
ëë 
)
ìì 
;
ìì 
part
îî 
.
îî 
	Numbering
îî 
.
îî 
Save
îî 
(
îî  
)
îî  !
;
îî! "
}
ïï 	
private
ññ 
static
ññ 
void
ññ 
	AddStyles
ññ %
(
ññ% &
MainDocumentPart
ññ& 6
mainPart
ññ7 ?
)
ññ? @
{
òò 	
var
óó 
part
óó 
=
óó 
mainPart
óó 
.
óó  "
StyleDefinitionsPart
óó  4
;
óó4 5
if
õõ 
(
õõ 
part
õõ 
==
õõ 
null
õõ 
)
õõ 
{
öö 
part
÷÷ 
=
÷÷ 
mainPart
÷÷ 
.
÷÷  

AddNewPart
÷÷  *
<
÷÷* +"
StyleDefinitionsPart
÷÷+ ?
>
÷÷? @
(
÷÷@ A
)
÷÷A B
;
÷÷B C
new
øø 
Styles
øø 
(
øø 
)
øø 
.
øø 
Save
øø !
(
øø! "
part
øø" &
)
øø& '
;
øø' (
}
ùù 
var
ûû 
latent
ûû 
=
ûû 
new
ûû 
LatentStyles
ûû )
(
ûû) *
new
üü &
LatentStyleExceptionInfo
üü ,
{
ýý 
Name
ýý 
=
ýý 
$str
ýý $
,
ýý$ %

UiPriority
ýý& 0
=
ýý1 2
$num
ýý3 4
,
ýý4 5
PrimaryStyle
ýý6 B
=
ýýC D

OnOffValue
ýýE O
.
ýýO P
FromBoolean
ýýP [
(
ýý[ \
true
ýý\ `
)
ýý` a
}
ýýa b
,
ýýb c
new
þþ &
LatentStyleExceptionInfo
þþ ,
{
ÿÿ 
Name
 
=
 
$str
 $
,
$ %

SemiHidden
& 0
=
1 2

OnOffValue
3 =
.
= >
FromBoolean
> I
(
I J
true
J N
)
N O
,
O P
UnhideWhenUsed
 "
=
# $

OnOffValue
% /
.
/ 0
FromBoolean
0 ;
(
; <
true
< @
)
@ A
}
 
,
 
new
 &
LatentStyleExceptionInfo
 ,
{
 
Name
 
=
 
$str
 ,
,
, -

UiPriority
. 8
=
9 :
$num
; =
,
= >
PrimaryStyle
? K
=
L M

OnOffValue
N X
.
X Y
FromBoolean
Y d
(
d e
true
e i
)
i j
}
j k
)
k l
{
  
DefaultLockedState
 "
=
# $

OnOffValue
% /
.
/ 0
FromBoolean
0 ;
(
; <
false
< A
)
A B
,
B C
DefaultUiPriority
 !
=
" #
$num
$ &
,
& '
DefaultSemiHidden
 !
=
" #

OnOffValue
$ .
.
. /
FromBoolean
/ :
(
: ;
false
; @
)
@ A
,
A B#
DefaultUnhideWhenUsed
 %
=
& '

OnOffValue
( 2
.
2 3
FromBoolean
3 >
(
> ?
false
? D
)
D E
,
E F!
DefaultPrimaryStyle
 #
=
$ %

OnOffValue
& 0
.
0 1
FromBoolean
1 <
(
< =
false
= B
)
B C
}
 
;
 
var
 
normalStyle
 
=
 
new
 !
Style
" '
(
' (
new
 
PrimaryStyle
  
(
  !
)
! "
)
 
{
 
StyleId
 
=
 
$str
 "
,
" #
	StyleName
 
=
 
new
 
	StyleName
  )
{
* +
Val
+ .
=
/ 0
$str
1 9
}
9 :
}
 
;
 
var
 
	numbering
 
=
 
new
 
Style
  %
(
% &
new
 
	StyleName
 
{
 
Val
 "
=
# $
$str
% .
}
. /
,
/ 0
new
 

UIPriority
 
{
  
Val
  #
=
$ %
$num
& (
}
( )
,
) *
new
 

SemiHidden
 
(
 
)
  
,
  !
new
 
UnhideWhenUsed
 "
(
" #
)
# $
)
 
{
 
Type
 
=
 
StyleValues
 "
.
" #
	Numbering
# ,
,
, -
Default
 
=
 

OnOffValue
 $
.
$ %
FromBoolean
% 0
(
0 1
true
1 5
)
5 6
,
6 7
StyleId
 
=
 
$str
 "
}
 
;
 
var
¢¢  
listParagraphStyle
¢¢ "
=
¢¢# $
new
¢¢% (
Style
¢¢) .
(
¢¢. /
new
££ 
PrimaryStyle
££  
(
££  !
)
££! "
,
££" #
new
¤¤ !
ParagraphProperties
¤¤ '
(
¤¤' (
new
¥¥ 
Indentation
¥¥ #
{
¥¥$ %
Left
¥¥% )
=
¥¥* +
new
¥¥, /
Unit
¥¥0 4
(
¥¥4 5
$num
¥¥5 9
,
¥¥9 :
UnitType
¥¥; C
.
¥¥C D
inch
¥¥D H
)
¥¥H I
}
¥¥I J
,
¥¥J K
new
¦¦ 
ContextualSpacing
¦¦ )
(
¦¦) *
)
¦¦* +
)
§§ 
)
§§ 
{
¨¨ 
Type
©© 
=
©© 
StyleValues
©© "
.
©©" #
	Paragraph
©©# ,
,
©©, -
StyleId
ªª 
=
ªª 
$str
ªª )
,
ªª) *
	StyleName
«« 
=
«« 
new
«« 
	StyleName
««  )
{
««* +
Val
««+ .
=
««/ 0
$str
««1 A
}
««A B
,
««B C
BasedOn
¬¬ 
=
¬¬ 
new
¬¬ 
BasedOn
¬¬ %
{
¬¬& '
Val
¬¬' *
=
¬¬+ ,
$str
¬¬- 5
}
¬¬5 6
,
¬¬6 7

UIPriority
­­ 
=
­­ 
new
­­  

UIPriority
­­! +
{
­­, -
Val
­­- 0
=
­­1 2
$num
­­3 5
}
­­5 6
}
®® 
;
®® 
part
°° 
.
°° 
Styles
°° 
.
°° 
Append
°° 
(
°° 
latent
°° %
,
°°% &
	numbering
°°' 0
,
°°0 1
normalStyle
°°2 =
,
°°= > 
listParagraphStyle
°°? Q
)
°°Q R
;
°°R S
part
²² 
.
²² 
Styles
²² 
.
²² 
Save
²² 
(
²² 
)
²² 
;
²² 
}
³³ 	
}
´´ 
}µµ 